import at.petrak.pkpcpbp.MiscUtil

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath group: 'com.diluv.schoomp', name: 'Schoomp', version: '1.2.6'
    }
}

plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm"
    id 'idea'
    // This needs to be in the root
    // https://github.com/FabricMC/fabric-loom/issues/612#issuecomment-1198444120
    // Also it looks like property lookups don't work this early
    id 'fabric-loom' version '1.6-SNAPSHOT' apply false

    id("at.petra-k.pkpcpbp.PKPlugin") version "0.2.0-pre-103"
    id("at.petra-k.pkpcpbp.PKSubprojPlugin") version "0.2.0-pre-103" apply false
    id("at.petra-k.pkpcpbp.PKJson5Plugin") version "0.2.0-pre-103" apply false
}

repositories {
    mavenCentral()
}

pkpcpbp {
    // if something goes wrong in CI, make sure we can see the logs to figure out why
    superDebugInfo = System.getenv("CI") != null
    // we set the maven coordinates manually in the subprojects block
    doProjectMetadata = false
    setupJarMetadata = true
    setupMavenMetadata = true
    javaVersion = 17
    modInfo {
        modID = project.modID
        mcVersion = project.minecraftVersion
        modVersion = project.modVersion
    }
    curseforgeInfo {
        id = 569849
        stability = "beta"
        token = System.getenv("CURSEFORGE_TOKEN")
    }
    modrinthInfo {
        id = "nTW3yKrm"
        stability = "beta"
        token = System.getenv("MODRINTH_TOKEN")
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'maven-publish'
    apply plugin: 'at.petra-k.pkpcpbp.PKSubprojPlugin'
    apply plugin: 'at.petra-k.pkpcpbp.PKJson5Plugin'

    group = "at.petra-k.$modID"
    base.archivesName = "$modID-$platform-$minecraftVersion"
    version = modVersion

    def isRelease = MiscUtil.isRelease(MiscUtil.getMostRecentPush(project))
    def buildNumber = System.getenv("BUILD_NUMBER")
    if (!isRelease && buildNumber != null) {
        version += "-pre-$buildNumber"
    }

    pkSubproj {
        platform = project.platform
        // this value is only checked if we run a publish task and the commit already starts with [Release]
        // so we should be fine to just leave it enabled
        pkPublish = true
        // TODO: uncomment when gamma-delta/PKPCPBP#4 is merged
        // artifactId = base.archivesName
        // versionDisplayName = "$platform-$minecraftVersion-$modVersion"
    }

    pkJson5 {
        autoProcessJson5 = true
        autoProcessJson5Flattening = true
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "17"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "17"
        }
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }

    sourceSets.main.kotlin.srcDirs += 'src/main/java'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    java.withSourcesJar()
    java.withJavadocJar()

    processResources {
        exclude '.cache'
    }
    sourcesJar {
        duplicatesStrategy 'exclude'
    }
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xmaxerrs" << "1000"
        }
    }

    // disable most javadoc warnings
    javadoc.options.addStringOption('Xdoclint:none', '-quiet')
}

tasks.register("runAllDatagen") {
    dependsOn ":Forge:runXplatDatagen"
    dependsOn ":Forge:runForgeDatagen"
    dependsOn ":Fabric:runDatagen"
}
