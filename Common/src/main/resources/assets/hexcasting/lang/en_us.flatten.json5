// A work in progress
{
  "item.hexcasting": {
    "book": "Hex Notebook",
    
    "oak_staff": "Oak Staff",
    "spruce_staff": "Spruce Staff",
    "birch_staff": "Birch Staff",
    "jungle_staff": "Jungle Staff",
    "acacia_staff": "Acacia Staff",
    "dark_oak_staff": "Dark Oak Staff",
    "crimson_staff": "Crimson Staff",
    "warped_staff": "Warped Staff",
    "mangrove_staff": "Mangrove Staff",
    "edified_staff": "Edified Staff",
    "quenched_staff": "Quenched Shard Staff",
    "mindsplice_staff": "Mindsplice Staff",
    
    "amethyst_dust": "Amethyst Dust",
    "charged_amethyst": "Charged Amethyst",
    "quenched_allay_shard": "Shard of Quenched Allay",
    
    "scroll_small": "Small Scroll",
    "scroll_small.of": "How did you get this item of %s",
    "scroll_small.empty": "Empty Small Scroll",
    "scroll_medium": "Medium Scroll",
    "scroll_medium.of": "How did you get this item of %s",
    "scroll_medium.empty": "Empty Medium Scroll",
    "scroll": "Large Scroll",
    "scroll.of": "Ancient Scroll of %s",
    "scroll.empty": "Empty Large Scroll",
    
    "thought_knot": "Thought-Knot",
    "focus": "Focus",
    "focus.sealed": "Sealed Focus",
    "spellbook": "Spellbook",
    "cypher": "Cypher",
    "trinket": "Trinket",
    "artifact": "Artifact",
    "battery": "Phial of Media",
    "lens": "Scrying Lens",
    "abacus": "Abacus",
    "jeweler_hammer": "Jeweler's Hammer",
    "sub_sandwich": "Submarine Sandwich",
    
    "dye_colorizer_white": "White Pigment",
    "dye_colorizer_orange": "Orange Pigment",
    "dye_colorizer_magenta": "Magenta Pigment",
    "dye_colorizer_light_blue": "Light Blue Pigment",
    "dye_colorizer_yellow": "Yellow Pigment",
    "dye_colorizer_lime": "Lime Pigment",
    "dye_colorizer_pink": "Pink Pigment",
    "dye_colorizer_gray": "Gray Pigment",
    "dye_colorizer_light_gray": "Light Gray Pigment",
    "dye_colorizer_cyan": "Cyan Pigment",
    "dye_colorizer_purple": "Purple Pigment",
    "dye_colorizer_blue": "Blue Pigment",
    "dye_colorizer_brown": "Brown Pigment",
    "dye_colorizer_green": "Green Pigment",
    "dye_colorizer_red": "Red Pigment",
    "dye_colorizer_black": "Black Pigment",
    "pride_colorizer_agender": "Agender Pigment",
    "pride_colorizer_aroace": "Aroace Pigment",
    "pride_colorizer_aromantic": "Aromantic Pigment",
    "pride_colorizer_asexual": "Asexual Pigment",
    "pride_colorizer_bisexual": "Bisexual Pigment",
    "pride_colorizer_demiboy": "Demiboy Pigment",
    "pride_colorizer_demigirl": "Demigirl Pigment",
    "pride_colorizer_gay": "Gay Pigment",
    "pride_colorizer_genderfluid": "Genderfluid Pigment",
    "pride_colorizer_genderqueer": "Genderqueer Pigment",
    "pride_colorizer_intersex": "Intersex Pigment",
    "pride_colorizer_lesbian": "Lesbian Pigment",
    "pride_colorizer_nonbinary": "Non-Binary Pigment",
    "pride_colorizer_pansexual": "Pansexual Pigment",
    "pride_colorizer_plural": "Plural Pigment",
    "pride_colorizer_transgender": "Transgender Pigment",
    "uuid_colorizer": "Soulglimmer Pigment",
    "default_colorizer": "Vacant Pigment",
    
    "creative_unlocker": "The Media Cube",
    "creative_unlocker.for_emphasis": "INFINITE MEDIA",
    "creative_unlocker.tooltip": "Consume to unlock all %s knowledge.",
    "creative_unlocker.mod_name": "Hexcasting",
    
    "lore_fragment": "Lore Fragment",
    "lore_fragment.all": "It seems I have found all the lore this world has to offer.",
  },
  
  "entity.hexcasting.wall_scroll": "Hanging Scroll",
  
  "block.hexcasting": {
    "conjured": "Conjured Light",
    "conjured_block": "Conjured Block",
    "slate.blank": "Blank Slate",
    "slate.written": "Patterned Slate",
    "empty_impetus": "Empty Impetus",
    "directrix_redstone": "Mason Directrix",
    "empty_directrix": "Empty Directrix",
    "impetus_rightclick": "Toolsmith Impetus",
    "impetus_look": "Fletcher Impetus",
    "impetus_storedplayer": "Cleric Impetus",
    "akashic_record": "Akashic Record",
    "akashic_bookshelf": "Akashic Bookshelf",
    "akashic_connector": "Akashic Ligature",
    
    "slate_block": "Block of Slate",
    "amethyst_dust_block": "Block of Amethyst Dust",
    "amethyst_tiles": "Amethyst Tiles",
    "scroll_paper": "Scroll Paper",
    "ancient_scroll_paper": "Ancient Scroll Paper",
    "scroll_paper_lantern": "Paper Lantern",
    "ancient_scroll_paper_lantern": "Ancient Paper Lantern",
    "amethyst_sconce": "Amethyst Sconce",
    "edified_log": "Edified Log",
    "stripped_edified_log": "Stripped Edified Log",
    "edified_wood": "Edified Wood",
    "stripped_edified_wood": "Stripped Edified Wood",
    "edified_planks": "Edified Planks",
    "edified_panel": "Edified Panel",
    "edified_tile": "Edified Tile",
    "edified_door": "Edified Door",
    "edified_trapdoor": "Edified Trapdoor",
    "edified_stairs": "Edified Stairs",
    "edified_slab": "Edified Slab",
    "edified_button": "Edified Button",
    "edified_pressure_plate": "Edified Pressure Plate",
    "amethyst_edified_leaves": "Amethyst Edified Leaves",
    "aventurine_edified_leaves": "Aventurine Edified Leaves",
    "citrine_edified_leaves": "Citrine Edified Leaves",
    "quenched_allay": "Quenched Allay",
    "slate": "Slate",
  },
  
  "itemGroup.hexcasting": "Hexcasting",
  "itemGroup.hexcasting.creative_tab": "Hexcasting",
  
  "gui.hexcasting.spellcasting": "Hex Grid",
  "tag.hexcasting.staves": "Hex Staves",
  "tag.hexcasting.edified_logs": "Edified Logs",
  "tag.hexcasting.edified_planks": "Edified Planks",
  "tag.hexcasting.phial_base": "Empty Phials",
  "emi.category.hexcasting.brainsweep": "Flay Mind",
  "emi.category.hexcasting.craft.battery": "Craft Phial",
  "emi.category.hexcasting.edify": "Edify Sapling",
  "emi.category.hexcasting.villager_leveling": "Trade Leveling",
  "emi.category.hexcasting.villager_profession": "Villager Profession",
  
  "text.autoconfig.hexcasting.title": "Hexcasting Config",
  "text.autoconfig.hexcasting.category.common": "Common",
  "text.autoconfig.hexcasting.category.client": "Client",
  "text.autoconfig.hexcasting.category.server": "Server",
  
  "text.autoconfig.hexcasting.option.common.dustMediaAmount": "Dust Media Amount",
  "text.autoconfig.hexcasting.option.common.shardMediaAmount": "Shard Media Amount",
  "text.autoconfig.hexcasting.option.common.chargedCrystalMediaAmount": "Charged Crystal Media Amount",
  "text.autoconfig.hexcasting.option.common.mediaToHealthRate": "Media To Health Rate",
  "text.autoconfig.hexcasting.option.common.cypherCooldown": "Cypher Cooldown",
  "text.autoconfig.hexcasting.option.common.trinketCooldown": "Trinket Cooldown",
  "text.autoconfig.hexcasting.option.common.artifactCooldown": "Artifact Cooldown",
  "text.autoconfig.hexcasting.option.common.dustMediaAmount.@Tooltip": "How much media a single Amethyst Dust item is worth",
  "text.autoconfig.hexcasting.option.common.shardMediaAmount.@Tooltip": "How much media a single Amethyst Shard item is worth",
  "text.autoconfig.hexcasting.option.common.chargedCrystalMediaAmount.@Tooltip": "How much media a single Charged Amethyst Crystal item is worth",
  "text.autoconfig.hexcasting.option.common.mediaToHealthRate.@Tooltip": "How many points of media a half-heart is worth when casting from HP",
  "text.autoconfig.hexcasting.option.common.cypherCooldown.@Tooltip": "Cooldown of a cypher in ticks",
  "text.autoconfig.hexcasting.option.common.trinketCooldown.@Tooltip": "Cooldown of a trinket in ticks",
  "text.autoconfig.hexcasting.option.common.artifactCooldown.@Tooltip": "Cooldown of an artifact in ticks",
  
  "text.autoconfig.hexcasting.option.client.ctrlTogglesOffStrokeOrder": "Ctrl Toggles Off Stroke Order",
  "text.autoconfig.hexcasting.option.client.invertSpellbookScrollDirection": "Invert Spellbook Scroll Direction",
  "text.autoconfig.hexcasting.option.client.invertAbacusScrollDirection": "Invert Abacus Scroll Direction",
  "text.autoconfig.hexcasting.option.client.gridSnapThreshold": "Grid Snap Threshold",
  "text.autoconfig.hexcasting.option.client.ctrlTogglesOffStrokeOrder.@Tooltip": "Whether the ctrl key will instead turn *off* the color gradient on patterns",
  "text.autoconfig.hexcasting.option.client.invertSpellbookScrollDirection.@Tooltip": "Whether scrolling up (as opposed to down) will increase the page index of the spellbook, and vice versa",
  "text.autoconfig.hexcasting.option.client.invertAbacusScrollDirection.@Tooltip": "Whether scrolling up (as opposed to down) will increase the page index of the abacus, and vice versa",
  "text.autoconfig.hexcasting.option.client.gridSnapThreshold.@Tooltip": "When using a staff, the distance from one dot you have to go to snap to the next dot, where 0.5 means 50% of the way (0.5-1)",
  
  "text.autoconfig.hexcasting.option.server.opBreakHarvestLevel": "Break Harvest Level",
  "text.autoconfig.hexcasting.option.server.maxOpCount": "Max Action Count",
  "text.autoconfig.hexcasting.option.server.maxSpellCircleLength": "Max Spell Circle Length",
  "text.autoconfig.hexcasting.option.server.actionDenyList": "Action Deny List",
  "text.autoconfig.hexcasting.option.server.circleActionDenyList": "Circle Action Deny List",
  "text.autoconfig.hexcasting.option.server.villagersOffendedByMindMurder": "Villagers Offended By Mind Murder",
  "text.autoconfig.hexcasting.option.server.scrollInjectionsRaw": "Scroll Injection Weights",
  "text.autoconfig.hexcasting.option.server.amethystShardModification": "Amethyst Shard Drop Rate Change",
  "text.autoconfig.hexcasting.option.server.opBreakHarvestLevel.@Tooltip": "The harvest level of the Break Block spell.\n0 = wood, 1 = stone, 2 = iron, 3 = diamond, 4 = netherite.",
  "text.autoconfig.hexcasting.option.server.maxOpCount.@Tooltip": "The maximum number of actions that can be executed in one tick, to avoid hanging the server.",
  "text.autoconfig.hexcasting.option.server.maxSpellCircleLength.@Tooltip": "The maximum number of slates in a spell circle",
  "text.autoconfig.hexcasting.option.server.actionDenyList.@Tooltip": "Resource locations of disallowed actions. Trying to cast one of these will result in a mishap. For example, hexcasting:get_caster will prevent Mind's Reflection",
  "text.autoconfig.hexcasting.option.server.circleActionDenyList.@Tooltip": "Resource locations of disallowed actions within circles. Trying to cast one of these from a circle will result in a mishap.",
  "text.autoconfig.hexcasting.option.server.villagersOffendedByMindMurder.@Tooltip": "Whether villagers should be angry at the player when other villagers are mindflayed",
  "text.autoconfig.hexcasting.option.server.fewScrollTables.@Tooltip": "Loot tables that a small number of Ancient Scrolls are injected into",
  "text.autoconfig.hexcasting.option.server.someScrollTables.@Tooltip": "Loot tables that a decent number of Ancient Scrolls are injected into",
  "text.autoconfig.hexcasting.option.server.manyScrollTables.@Tooltip": "Loot tables that a huge number of Ancient Scrolls are injected into",
  "text.autoconfig.hexcasting.option.server.scrollInjectionsRaw.@Tooltip": "Maps the names of loot tables to the amount of per-world patterns on scrolls should go in them. There's about a 50% chance to get any scrolls in a given chest marked here; once that is met, between 1 and that many scrolls are generated.",
  "text.autoconfig.hexcasting.option.server.amethystShardModification.@Tooltip": "How much the number of amethyst shards dropped from clusters is increased/decreased.",
  
  "advancement.hexcasting:root": "Hexcasting Research",
  "advancement.hexcasting:root.desc": "Find and mine a concentrated form of media growing deep beneath the earth.",
  "advancement.hexcasting:enlightenment": "Achieve Enlightenment",
  "advancement.hexcasting:enlightenment.desc": "Shatter a barrier by casting a hex using almost all of your health.",
  "advancement.hexcasting:wasteful_cast": "Waste Not...",
  "advancement.hexcasting:wasteful_cast.desc": "Waste a large amount of media when casting a hex.",
  "advancement.hexcasting:big_cast": "... Want Not",
  "advancement.hexcasting:big_cast.desc": "Cast a single spell requiring a truly huge amount of media.",
  "advancement.hexcasting:y_u_no_cast_angy": "Blind Diversion",
  "advancement.hexcasting:y_u_no_cast_angy.desc": "Try to cast a spell from a scroll, but fail.",
  "advancement.hexcasting:opened_eyes": "Opened Eyes",
  "advancement.hexcasting:opened_eyes.desc": "Have nature take a piece of your mind in payment for a hex. What might happen if you let it have more?",
  "advancement.hexcasting:lore": "Hexcasting Lore",
  "advancement.hexcasting:lore.desc": "Read a Lore Fragment",
  "advancement.hexcasting:lore/terabithia1": "Cardamom Steles #1",
  "advancement.hexcasting:lore/terabithia1.desc": "Letter from Cardamom Steles to Her Father, #1",
  "advancement.hexcasting:lore/terabithia2": "Cardamom Steles #2",
  "advancement.hexcasting:lore/terabithia2.desc": "Letter from Cardamom Steles to Her Father, #2",
  "advancement.hexcasting:lore/terabithia3": "Cardamom Steles #3",
  "advancement.hexcasting:lore/terabithia3.desc": "Letter from Cardamom Steles to Her Father, #3, 1/2",
  "advancement.hexcasting:lore/terabithia4": "Cardamom Steles #3 pt2",
  "advancement.hexcasting:lore/terabithia4.desc": "Letter from Cardamom Steles to Her Father, #3, 2/2",
  "advancement.hexcasting:lore/terabithia5": "Cardamom Steles #4",
  "advancement.hexcasting:lore/terabithia5.desc": "Letter from Cardamom Steles to Her Father, #4",
  "advancement.hexcasting:lore/experiment1": "Wooleye Instance Notes",
  "advancement.hexcasting:lore/experiment2": "Wooleye Interview Logs",
  "advancement.hexcasting:lore/inventory": "Restoration Log 72",
  
  "stat.hexcasting.media_used": "Media Consumed (in dust)",
  "stat.hexcasting.media_overcasted": "Media Overcast (in dust)",
  "stat.hexcasting.patterns_drawn": "Patterns Drawn",
  "stat.hexcasting.spells_cast": "Spells Cast",
  
  "death.attack.hexcasting.overcast": "%s's mind was subsumed into energy",
  "death.attack.hexcasting.shame": "Shame on %s!",
  
  "command.hexcasting.pats.listing": "Patterns in this world:",
  "command.hexcasting.pats.all": "Gave all %d scrolls to %s",
  "command.hexcasting.pats.specific.success": "Gave %s with id %s to %s",
  "command.hexcasting.recalc": "Recalculated patterns",
  "command.hexcasting.brainsweep": "Brainswept %s",
  "command.hexcasting.brainsweep.fail.badtype": "%s is not a mob",
  "command.hexcasting.brainsweep.fail.already": "%s is already empty",
  
  hexcasting: {
    "pattern.unknown": "Unknown pattern resource location %s",
    
    debug: {
      "media_withdrawn": "%s - Media withdrawn: %s",
      "media_withdrawn.with_dust": "%s - Media withdrawn: %s (%s in dust)",
      "media_inserted": "%s - Media inserted: %s",
      "media_inserted.with_dust": "%s - Media inserted: %s (%s in dust)",
      "all_media": "Entire contents",
      "infinite_media": "Infinite",
    },
    
    // TODO: post-eigengrau make these less anticlimactic
    message: {
      "cant_overcast": "That Hex needed more media than I had... I should double-check my math.",
      "cant_great_spell": "The spell failed, somehow... am I not skilled enough?",
    },
    
    tooltip: {
      spellbook: {
        "page": "Selected Page %d/%d",
        "page.sealed": "Selected Page %d/%d (%s)",
        "page_with_name": "Selected Page %d/%d (\"%s\")",
        "page_with_name.sealed": "Selected Page %d/%d (\"%s\") (%s)",
        "sealed": "Sealed",
        "empty": "Empty",
        "empty.sealed": "Empty (%s)",
      },
      
      "abacus": "%d",
      "abacus.reset": "Reset to 0",
      "abacus.reset.nice": "nice",
      
      lens: {
        "impetus.storedplayer": "Bound to %s",
        "impetus.storedplayer.none": "Unbound",
        "pattern.invalid": "Invalid Pattern",
        "akashic.bookshelf.location": "Record at %s",
        "akashic.record.count": "%s iotas stored",
        "akashic.record.count.single": "%s iota stored",
        "bee": "%s bees",
        "bee.single": "%s bee",
      },
      
      "brainsweep.min_level": "Level %s or higher",
      "brainsweep.level": "Level %s",
      "brainsweep.product": "Mindless Body",
    },
    // ^ tooltip
    spelldata: {
      "onitem": "Contains: %s",
      "anything": "Anything",
      "unknown": "A broken iota",
      "entity.whoknows": "An unknown entity",
      "akashic.nopos": "The owning record does not know of any iota here (this is a bug)"
    },
    
    subtitles: {
      casting: {
        pattern: {
          start: "Starting pattern",
          add_segment: "Adding line",
        },
        cast: {
          normal: "Action hums",
          spell: "Spell boinks",
          hermes: "Hermes' twangs",
          thoth: "Thoth's twangs"
        }
      },
      
      ambiance: "Hex grid hums",
      staff: {
        reset: "Casting resets"
      },
      
      abacus: {
        "": "Abacus clicks",
        shake: "Abacus shakes"
      },
      "spellcircle.add_pattern": "Spell circle crackles",
      "spellcircle.fail": "Spell circle fizzles out",
      "scroll.dust": "Scroll covers with dust",
      "scroll.scribble": "Scroll is scribbled",
      "impetus.fletcher.tick": "Fletcher Impetus ticks",
      "impetus.cleric.register": "Cleric Impetus dings",
      "lore_fragment.read": "Read lore fragment",
      "flight.ambience": "Player flies",
      "flight.finish": "Flight ends",
    },
    
    attributes: {
      grid_zoom: "Casting Grid Size",
      // TODO: the +1 is kind of janky
      scry_sight: "Scrying Sight"
    },
    
    // Actual hexcasting stuff
    
    action: {
      "hexcasting:": {
        "const/null": "Nullary Reflection",
        "const/vec/px": "Vector Reflection +X",
        "const/vec/py": "Vector Reflection +Y",
        "const/vec/pz": "Vector Reflection +Z",
        "const/vec/nx": "Vector Reflection -X",
        "const/vec/ny": "Vector Reflection -Y",
        "const/vec/nz": "Vector Reflection -Z",
        "const/vec/0": "Vector Reflection Zero",
        "const/true": "True Reflection",
        "const/false": "False Reflection",
        "const/double/pi": "Arc's Reflection",
        "const/double/tau": "Circle's Reflection",
        "const/double/e": "Euler's Reflection",
        
        "get_caster": "Mind's Reflection",
        "entity_pos/eye": "Compass' Purification",
        "entity_pos/foot": "Compass' Purification II",
        "get_entity_look": "Alidade's Purification",
        "get_entity_height": "Stadiometer's Purification",
        "get_entity_velocity": "Pace Purification",
        "raycast": "Archer's Distillation",
        "raycast/axis": "Architect's Distillation",
        "raycast/entity": "Scout's Distillation",
        "circle/impetus_pos": "Waystone Reflection",
        "circle/impetus_dir": "Lodestone Reflection",
        "circle/bounds/min": "Lesser Fold Reflection",
        "circle/bounds/max": "Greater Fold Reflection",
        
        "append": "Integration Distillation",
        "concat": "Combination Distillation",
        "index": "Selection Distillation",
        "list_size": "Abacus Purification",
        "singleton": "Single's Purification",
        "empty_list": "Vacant Reflection",
        "reverse_list": "Retrograde Purification",
        "last_n_list": "Flock's Gambit",
        "splat": "Flock's Disintegration",
        "index_of": "Locator's Distillation",
        "list_remove": "Excisor's Distillation",
        "slice": "Selection Exaltation",
        "modify_in_place": "Surgeon's Exaltation",
        "construct": "Speaker's Distillation",
        "deconstruct": "Speaker's Decomposition",
        
        "get_entity": "Entity Purification",
        "get_entity/animal": "Entity Purification: Animal",
        "get_entity/monster": "Entity Purification: Monster",
        "get_entity/item": "Entity Purification: Item",
        "get_entity/player": "Entity Purification: Player",
        "get_entity/living": "Entity Purification: Living",
        "zone_entity": "Zone Distillation: Any",
        "zone_entity/animal": "Zone Distillation: Animal",
        "zone_entity/monster": "Zone Distillation: Monster",
        "zone_entity/item": "Zone Distillation: Item",
        "zone_entity/player": "Zone Distillation: Player",
        "zone_entity/living": "Zone Distillation: Living",
        "zone_entity/not_animal": "Zone Distillation: Non-Animal",
        "zone_entity/not_monster": "Zone Distillation: Non-Monster",
        "zone_entity/not_item": "Zone Distillation: Non-Item",
        "zone_entity/not_player": "Zone Distillation: Non-Player",
        "zone_entity/not_living": "Zone Distillation: Non-Living",
        
        "swap": "Jester's Gambit",
        "rotate": "Rotation Gambit",
        "rotate_reverse": "Rotation Gambit II",
        "duplicate": "Gemini Decomposition",
        "over": "Prospector's Gambit",
        "tuck": "Undertaker's Gambit",
        "2dup": "Dioscuri Gambit",
        "duplicate_n": "Gemini Gambit",
        "stack_len": "Flock's Reflection",
        "fisherman": "Fisherman's Gambit",
        "fisherman/copy": "Fisherman's Gambit II",
        "swizzle": "Swindler's Gambit",
        
        "bit/and": "Intersection Distillation",
        "bit/or": "Unifying Distillation",
        "bit/xor": "Exclusionary Distillation",
        "bit/not": "Inversion Purification",
        "bit/to_set": "Uniqueness Purification",
        "and": "Conjunction Distillation",
        "or": "Disjunction Distillation",
        "xor": "Exclusion Distillation",
        
        "greater": "Maximus Distillation",
        "less": "Minimus Distillation",
        "greater_eq": "Maximus Distillation II",
        "less_eq": "Minimus Distillation II",
        "equals": "Equality Distillation",
        "not_equals": "Inequality Distillation",
        "not": "Negation Purification",
        "bool_coerce": "Augur's Purification",
        "bool_to_number": "Numerologist's Purification",
        "if": "Augur's Exaltation",
        
        "add": "Additive Distillation",
        "sub": "Subtractive Distillation",
        "mul_dot": "Multiplicative Dstl.",
        "div_cross": "Division Dstl.",
        "abs_len": "Length Purification",
        "pow_proj": "Power Distillation",
        "floor": "Floor Purification",
        "ceil": "Ceiling Purification",
        "modulo": "Modulus Distillation",
        "construct_vec": "Vector Exaltation",
        "deconstruct_vec": "Vector Disintegration",
        "sin": "Sine Purification",
        "cos": "Cosine Purification",
        "tan": "Tangent Purification",
        "arcsin": "Inverse Sine Purification",
        "arccos": "Inverse Cosine Purification",
        "arctan": "Inverse Tangent Purification",
        "arctan2": "Inverse Tangent Purification II",
        "random": "Entropy Reflection",
        "logarithm": "Logarithmic Distillation",
        "coerce_axial": "Axial Purification",
        
        "read": "Scribe's Reflection",
        "read/entity": "Chronicler's Purification",
        "write": "Scribe's Gambit",
        "write/entity": "Chronicler's Gambit",
        "readable": "Auditor's Reflection",
        "writable": "Assessor's Reflection",
        "readable/entity": "Auditor's Purification",
        "writable/entity": "Assessor's Purification",
        "akashic/read": "Akasha's Distillation",
        "akashic/write": "Akasha's Gambit",
        "read/local": "Muninn's Reflection",
        "write/local": "Huginn's Gambit",
        
        "print": "Reveal",
        "beep": "Make Note",
        "explode": "Explosion",
        "explode/fire": "Fireball",
        "add_motion": "Impulse",
        "blink": "Blink",
        "break_block": "Break Block",
        "place_block": "Place Block",
        "craft/cypher": "Craft Cypher",
        "craft/trinket": "Craft Trinket",
        "craft/artifact": "Craft Artifact",
        "craft/battery": "Craft Phial",
        "recharge": "Recharge Item",
        "erase": "Erase Item",
        "create_water": "Create Water",
        "destroy_water": "Destroy Liquid",
        "ignite": "Ignite Block",
        "extinguish": "Extinguish Area",
        "conjure_block": "Conjure Block",
        "conjure_light": "Conjure Light",
        "bonemeal": "Overgrow",
        "edify": "Edify Sapling",
        "colorize": "Internalize Pigment",
        "sentinel/create": "Summon Sentinel",
        "sentinel/destroy": "Banish Sentinel",
        "sentinel/get_pos": "Locate Sentinel",
        "sentinel/wayfind": "Wayfind Sentinel",
        "potion/weakness": "White Sun's Nadir",
        "potion/levitation": "Blue Sun's Nadir",
        "potion/wither": "Black Sun's Nadir",
        "potion/poison": "Red Sun's Nadir",
        "potion/slowness": "Green Sun's Nadir",
        "flight/range": "Anchorite's Flight",
        "flight/time": "Wayfarer's Flight",
        
        "potion/regeneration": "White Sun's Zenith",
        "potion/night_vision": "Blue Sun's Zenith",
        "potion/absorption": "Black Sun's Zenith",
        "potion/haste": "Red Sun's Zenith",
        "potion/strength": "Green Sun's Zenith",
        "flight": "Altiora",
        "lightning": "Summon Lightning",
        "summon_rain": "Summon Rain",
        "dispel_rain": "Dispel Rain",
        "create_lava": "Create Lava",
        "teleport": "Greater Teleport",
        "brainsweep": "Flay Mind",
        "sentinel/create/great": "Summon Greater Sentinel",
        
        "eval": "Hermes' Gambit",
        "for_each": "Thoth's Gambit",
        "halt": "Charon's Gambit",
        
        "interop/": {
          "gravity/get": "Gravitational Purification",
          "gravity/set": "Alter Gravity",
          "pehkui/get": "Gulliver's Purification",
          "pehkui/set": "Alter Scale",
        }
      },
      
      // hexcasting.action.book.[resloc] override the name of that pattern in the patchi book, for abbreviations
      "book.hexcasting:": {
        "get_entity_height": "Stadiometer's Prfn.",
        "get_entity/animal": "Entity Prfn.: Animal",
        "get_entity/monster": "Entity Prfn.: Monster",
        "get_entity/item": "Entity Prfn.: Item",
        "get_entity/player": "Entity Prfn.: Player",
        "get_entity/living": "Entity Prfn.: Living",
        "zone_entity": "Zone Dstl.: Any",
        "zone_entity/animal": "Zone Dstl.: Animal",
        "zone_entity/monster": "Zone Dstl.: Monster",
        "zone_entity/item": "Zone Dstl.: Item",
        "zone_entity/player": "Zone Dstl.: Player",
        "zone_entity/living": "Zone Dstl.: Living",
        "zone_entity/not_animal": "Zone Dstl.: Non-Animal",
        "zone_entity/not_monster": "Zone Dstl.: Non-Monster",
        "zone_entity/not_item": "Zone Dstl.: Non-Item",
        "zone_entity/not_player": "Zone Dstl.: Non-Player",
        "zone_entity/not_living": "Zone Dstl.: Non-Living",
        "mul_dot": "Multiplicative Dstl.",
        "div_cross": "Division Dstl.",
        "arcsin": "Inverse Sine Prfn.",
        "arccos": "Inverse Cosine Prfn.",
        "arctan": "Inverse Tangent Prfn.",
        "arctan2": "Inverse Tan. Prfn. II",
        "const/vec/x": "Vector Rfln. +X/-X",
        "const/vec/y": "Vector Rfln. +Y/-Y",
        "const/vec/z": "Vector Rfln. +Z/-Z",
        "read/entity": "Chronicler's Prfn.",
        "bool_to_number": "Numerologist's Prfn.",
        "number": "Numerical Reflection",
        "mask": "Bookkeeper's Gambit",
      }
    },
    // ^ action
    "special.hexcasting:": {
      "number": "Numerical Reflection: %s",
      "mask": "Bookkeeper's Gambit: %s",
    },
    "rawhook.hexcasting:": {
      "open_paren": "Introspection",
      "close_paren": "Retrospection",
      "escape": "Consideration",
    },
    "iota.hexcasting:": {
      "null": "Null",
      "double": "Number",
      "boolean": "Boolean",
      "entity": "Entity",
      "list": "List",
      "pattern": "Pattern",
      "garbage": "Garbage",
      "vec3": "Vector"
    },
    mishap: {
      "": "%s: %s",
      
      "invalid_pattern": "That pattern isn't associated with any action",
      "unescaped": "Expected to evaluate a pattern, but evaluated %s instead",
      
      "not_enough_args": "expected %s or more arguments but the stack was only %s tall",
      "no_args": "expected %s or more arguments but the stack was empty",
      "too_many_close_parens": "Did not first use Introspection",
      
      "wrong_dimension": "cannot see %s from %s",
      "entity_too_far": "%s is out of range",
      "immune_entity": "cannot alter %s",
      "eval_too_deep": "Recursively evaluated too deep",
      "no_item": "needs %s but got nothing",
      "no_item.offhand": "needs %s in the other hand but got nothing",
      "bad_entity": "needs %s but got %s",
      "bad_brainsweep": "The %s rejected the being's mind",
      "already_brainswept": "The mind has already been used",
      "no_spell_circle": "%s requires a spell circle",
      "others_name": "Tried to invade the privacy of %s's soul",
      "others_name.self": "Tried to divulge my Name too recklessly",
      "divide_by_zero.divide": "Attempted to divide %s by %s",
      "divide_by_zero.project": "Attempted to project %s onto %s",
      "divide_by_zero.exponent": "Attempted to raise %s to the %s",
      "divide_by_zero.logarithm": "Attempted to get the logarithm of %s in base %s",
      "divide_by_zero.zero": "zero",
      "divide_by_zero.zero.power": "zeroth power",
      "divide_by_zero.zero.vec": "the zero vector",
      "divide_by_zero.power": "power of %s",
      "divide_by_zero.sin": "the sine of %s",
      "divide_by_zero.cos": "the cosine of %s",
      "no_akashic_record": "No Akashic Record at %s",
      "disallowed": "has been disallowed by the server admins",
      "disallowed_circle": "has been disallowed in spell circles by the server admins",
      "invalid_spell_datum_type": "Tried to use a value of invalid type as a SpellDatum: %s (class %s). This is a bug in the mod.",
      "unknown": "threw an exception (%s). This is a bug in the mod.",
      "shame": "Shame on you!",
      
      "invalid_value": {
        "": "expected %s at index %s of the stack, but got %s",
        "class.double": "a number",
        "class.boolean": "a boolean",
        "class.vector": "a vector",
        "class.list": "a list",
        "class.widget": "an influence",
        "class.pattern": "a pattern",
        "class.entity.item": "an item entity",
        "class.entity.player": "a player",
        "class.entity.villager": "a villager",
        "class.entity.living": "a living entity",
        "class.entity": "an entity",
        "class.unknown": "(unknown, uh-oh, this is a bug)",
        "numvec": "a number or vector",
        "numlist": "an integer or list",
        "list.pattern": "a list of patterns",
        "double.positive": "a positive number",
        "double.positive.less": "a positive number less than %d",
        "double.positive.less.equal": "a positive number less than or equal to %d",
        "double.between": "a number between %d and %d",
        "int": "an integer",
        "int.positive": "a positive integer",
        "int.positive.less": "a positive integer less than %d",
        "int.positive.less.equal": "a positive integer less than or equal to %d",
        "int.between": "an integer between %d and %d",
        "evaluatable": "something evaluatable",
        "bool_commute": "a boolean, 0, or 1",
      },
      location: {
        "too_far": "%s is out of range",
        "out_of_world": "%s is not within the world",
        "too_close_to_out": "%s is too close to the boundary of the world",
        "forbidden": "%s is forbidden to you",
        "bad_dimension": "This dimension forbids that action",
      },
      
      bad_item: {
        "": "needs %s but got %dx %s",
        "offhand": "needs %s in the other hand but got %dx %s",
        "iota": "a place to store iotas",
        "iota.read": "a place to read iotas from",
        "iota.write": "a place to write iotas to",
        "iota.readonly": "a place that will accept %s",
        "media": "a media-containing item",
        "media_for_battery": "a raw media item",
        "only_one": "exactly one item",
        "eraseable": "an eraseable item",
        "bottle": "a glass bottle",
        "rechargable": "a rechargable item",
        "colorizer": "a pigment",
      },
      bad_block: {
        "": "Expected %s at %s, but got %s",
        "sapling": "a sapling",
        "replaceable": "somewhere to place a block",
      }
    },
    // ^ mishap
    
    circles: {
      no_exit: "The flow of media at %s could not find an exit",
      many_exits: "The flow of media at %s had too many exits"
    },
    
    // Patchi stuff!
    landing: ">>>\
|     I seem to have discovered a new method of magical arts, in which one draws patterns strange and wild onto a hexagonal grid.\
|     It fascinates me. I've decided to start a journal of my thoughts and findings.\
|     $(br2)$(l:https://forum.petra-k.at/index.php)Forum Link/$",
    
    category: {
      basics: {
        "": "Getting Started",
        "desc": ">>>\
|         The practitioners of this art would cast their so-called _Hexes by drawing strange patterns in the air with a $(l:items/staff)$(item)Staff/$-- \
|         or craft $(l:items/hexcasting)$(item)powerful magical items/$ to do the casting for them.\
|         How might I do the same?"
      },
      casting: {
        "": "Hex Casting",
        desc: ">>>\
|         I've started to understand how the old masters cast their _Hexes! It's a bit complicated,\
|         but I'm sure I can figure it out. Let's see..."
      },
      items: {
        "": "Items",
        desc: ">>>\
|         I devote this section to the magical and mysterious items I might encounter in my studies.$(br2)\
|         It seems like many of these items have uses when held alongside my $(l:items/staff)$(item)staff/$.\
|         I suppose I will have to choose what goes in my other hand carefully."
      },
      
      greatwork: {
        "": "The Great Work",
        desc: ">>>\
|         I have seen... so much. I have... experienced... annihilation and deconstruction and reconstruction.\
|         I have seen the atoms of the world screaming as they were inverted and subverted and demoted to energy.\
|         I have seen I have seen I have s$(k)get stick bugged lmao/$",
        // alwinfy you think you're so funny
      },
      
      patterns: {
        "": "Patterns",
        desc: "A list of all the patterns I've discovered, as well as what they do."
      },
      spells: {
        "": "Spells",
        desc: "Patterns and actions that perform a magical effect on the world."
      },
      great_spells: {
        "": "Great Spells",
        desc: ">>>\
|         The spells catalogued here are purported to be of legendary difficulty and power.\
|         They seem to have been recorded only sparsely (for good reason, the texts claim).\
|         It's probably just the ramblings of extinct traditionalists, though -- a pattern's a pattern.$(br2)\
|         What could possibly go wrong?"
      },
    },
    // ^ categories
    
    entry: {
      media: "Media",
      geodes: "Geodes",
      couldnt_cast: "A Frustration",
      start_to_see: "WHAT DID I SEE",
      "101": "Hex Casting 101",
      vectors: "A Primer On Vectors",
      mishaps: "Mishaps",
      stack: "The Stack",
      naming: "Naming Actions",
      influences: "Influences",
      mishaps2: "Enlightened Mishaps",
      amethyst: "Amethyst",
      
      staff: "Staves",
      lens: "Scrying Lens",
      jeweler_hammer: "Jeweler's Hammer",
      
      thought_knot: "Thought-Knot",
      focus: "Focus",
      abacus: "Abacus",
      spellbook: "Spellbook",
      
      scroll: "Scrolls",
      slate: "Slates",
      
      // why is this called "hexcasting"?
      hexcasting: "Casting Items",
      phials: "Phials of Media",
      pigments: "Pigments",
      
      edified: "Edified Trees",
      decoration: "Decorative Blocks",
      
      the_work: "The Work",
      brainsweeping: "On The Flaying of Minds",
      spellcircles: "Spell Circles",
      impetus: "Impeti",
      directrix: "Directrices",
      akashiclib: "Akashic Libraries",
      quenching_allays: "Quenching Allays",
      fanciful_staves: "Fanciful Staves",
      
      // and the actions
      readers_guide: "How to Read This Section",
      // ops
      basics_pattern: "Basic Patterns",
      numbers: "Number Literals",
      math: "Mathematics",
      advanced_math: "Advanced Mathematics",
      sets: "Sets",
      consts: "Constants",
      stackmanip: "Stack Manipulation",
      logic: "Logical Operators",
      entities: "Entities",
      lists: "List Manipulation",
      patterns_as_iotas: "Escaping Patterns",
      readwrite: "Reading and Writing",
      meta: "Meta-Evaluation",
      circle_patterns: "Spell Circle Patterns",
      akashic_patterns: "Akashic Patterns",
      
      // spells
      itempicking: "Working with Items",
      basic_spell: "Basic Spells",
      blockworks: "Block Manipulation",
      nadirs: "Nadirs",
      hexcasting_spell: "Crafting Casting Items",
      sentinels: "Sentinels",
      // internalize pigment uses the action name
      flights: "Flight",
      
      // great spells usually use the action name
      weather_manip: "Weather Manipulation",
      zeniths: "Zeniths",
      
      lore: "Lore",
      
      interop: {
        "": "Cross-Mod Interations",
        gravity: "Gravity Changer",
        pehkui: "Pehkui",
        // TODO: add something about Switchy once that PR gets merged
        // https://github.com/sisby-folk/switchy/pull/44
        // i can't WAIT for all the hilarious people on the github issues about this one
      }
    },
    // ^ entries
    
    page: {
      "media.1": "_Media is a form of mental energy external to a mind. All living creatures generate trace amounts of _media when thinking about anything; after the thought is finished, the media is released into the environment.$(br2)The art of casting _Hexes is all about manipulating _media to do your bidding.",
      "media.2": "_Media can exert influences on other media-- the strength and type of influence can be manipulated by drawing _media out into patterns.$(p)Scholars of the art used a concentrated blob of _media on the end of a stick: by waving it in the air in precise configurations, they were able to manipulate enough _media with enough precision to influence the world itself, in the form of a _Hex.",
      "media.3": "Sadly, even a fully sentient being (like myself, presumably) can only generate miniscule amounts of _media. It would be quite impractical to try and use my own brainpower to cast Hexes.$(br2)But legend has it that there are underground deposits where _media slowly accumulates, growing into crystalline forms.$(p)If I could just find one of those...",
      
      
      "geodes.1": "Aha! While mining deep underground, I found an enormous geode resonating with energy-- energy which pressed against my skull and my thoughts. And now, I hold that pressure in my hand, in solid form. That proves it. This $(italic)must/$ be the place spoken about in legends where _media accumulates.$(br2)These $(l:items/amethyst)$(item)amethyst crystals/$ must be a $(l:items/amethyst)$(thing)convenient, solidified form of _Media/$.",
      "geodes.2": "It appears that, in addition to the $(l:items/amethyst)$(item)Amethyst Shards/$ I have seen in the past, these crystals can also drop bits of powdered $(l:items/amethyst)$(item)Amethyst Dust/$, as well as these $(l:items/amethyst)$(item)Charged Amethyst Crystals/$. It looks like I'll have a better chance of finding the $(l:items/amethyst)$(item)Charged Amethyst Crystals/$ by using a Fortune pickaxe.",
      "geodes.3": "As I take the beauty of the crystal in, I can feel connections flashing wildly in my mind. It's like the _media in the air is entering me, empowering me, elucidating me... It feels wonderful.$(br2)Finally, my study into the arcane is starting to make some sense!$(p)Let me reread those old legends again, now that I know what I'm looking at.",
      
      
      "couldnt_cast.1": "Argh! Why won't it let me cast the spell?!$(br2)The scroll I found rings with authenticity. I can $(italic)feel/$ it humming in the scroll-- the pattern is true, or as true as it can be. The spell is $(italic)right there/$.$(p)But it feels as if it's on the other side of some thin membrane. I called it-- it tried to manifest-- yet it $(italic)COULD NOT/$.",
      "couldnt_cast.2": "It felt like the barrier may have weakened ever so slightly from the force that I exerted on the spell; yet despite my greatest efforts-- my deepest focus, my finest amethyst, my precisest drawings-- it $(italic)refuses/$ to cross the barrier. It's maddening.$(p)$(italic)This/$ is where my arcane studies end? Cursed by impotence, cursed to lose my rightful powers?$(br2)I should take a deep breath. I should meditate on what I have learned, even if it wasn't very much...",
      "couldnt_cast.3": "...After careful reflection... I have discovered a change in myself.$(p)It seems... in lieu of $(l:items/amethyst)$(item)amethyst/$, I've unlocked the ability to cast spells using my own mind and life energy-- just as I read of in the legends of old.$(p)I'm not sure why I can now. It's just... the truth-knowledge-burden was always there, and I see it now. I know it. I bear it.$(br2)Fortunately, I feel my limits as well-- I would get approximately two $(l:items/amethyst)$(item)Charged Amethyst/$'s worth of _media out of my health at its prime.",
      "couldnt_cast.4": "I shudder to even consider it-- I've kept my mind mostly intact so far, in my studies. But the fact is-- I form one side of a tenuous link.$(p)I'm connected to some other side-- a side whose boundary has thinned from that trauma. A place where simple actions spell out eternal glory.$(p)Is it so wrong, to want it for myself?",
      
      
      "start_to_see.1": "The texts weren't lying. Nature took its due.",
      "start_to_see.2": "That... that was...$(p)...that was one of the $(italic)worst/$ things I've $(italic)ever/$ experienced. I offered my plan to Nature, and got a firm smile and a tearing sensation in return-- a piece of myself breaking away, like amethyst dust in the rain.$(p)I feel lucky to have $(italic)survived/$, much less have the sagacity to write this-- I should declare the matter closed, double-check my math before I cast any more _Hexes, and never make such a mistake again.",
      "start_to_see.3": "...But.$(br2)But for the scarcest instant, that part of myself... it $(italic)saw/$... $(l:greatwork/the_work)$(thing)something/$. A place-- a design, perhaps? (Such distinctions didn't seem to matter in the face of... that.)$(p)And a... a membrane-barrier-skin-border, separating myself from a realm of raw thought-flow-light-energy. I remember-- I saw-thought-recalled-felt-- the barrier fuzzing at its edges, just so slightly.$(p)I wanted $(italic)through./$",
      "start_to_see.4": "I shouldn't. I $(italic)know/$ I shouldn't. It's dangerous. It's too dangerous. The force required... I'd have to bring myself within a hair's breadth of Death itself with a $(italic)single stroke/$.$(br2)But I'm. So. $(italic)Close/$.$(p)$(italic)This/$ is the culmination of my art. This is the $(#54398a)Enlightenment/$ I've been seeking. $(br2)I want more. I need to see it again. I $(italic)will/$ see it.$(p)What is my mortal mind against immortal glory?",
      
      // Casting
      "101.1": "Casting a _Hex is quite difficult-- no wonder this art was lost to time! I'll have to re-read my notes carefully.$(br2)I can start a _Hex by pressing $(k:use) with a $(l:items/staff)$(item)Staff/$ in my hand-- this will cause a hexagonal grid of dots to appear in front of me. Then I can click and drag from dot to dot to draw patterns in the _media of the grid; finishing a pattern will run its corresponding action (more on that later).",
      "101.2": "Once I've drawn enough patterns to cast a spell, the grid will disappear as the _media I've stored up is released. Holding $(k:sneak) while using my $(l:items/staff)$(item)staff/$ will also clear the grid, if I don't mind the chance of mishap. (It seems that the more _media I've built up, the more likely I'll meet misfortune.)$(br2)So how do patterns work? In short:$(li)$(italic)Patterns/$ will execute...$(li)$(italic)Actions/$, which manipulate...$(li)$(l:casting/stack)$(italic)The Stack/$, which is a list of...$(li)$(italic)Iotas/$, which are simply units of information.",
      "101.3": "First, $(thing)patterns/$. These are essential-- they're what I use to manipulate the _media around me. Certain patterns, when drawn, will cause $(thing)actions/$ to happen. Actions are what actually $(italic)do/$ the magic; all patterns influence _media in particular ways, and when those influences end up doing something useful, we call it an action.$(br2)_Media can be fickle: if I draw an invalid pattern, I'll get some $(l:casting/influences)$(action)garbage/$ result somewhere on my stack (read on...)",
      "101.4.header": "An Example",
      "101.4": "It's interesting to note that the $(italic)rotation/$ of a pattern doesn't seem to matter at all. These two patterns both perform an action called $(l:patterns/basics#hexcasting:get_caster)$(action)Mind's Reflection/$, for example.",
      "101.5": "A _Hex is cast by drawing (valid) actions in sequence. Each action might do one of a few things:$(li)Gather some information about the environment, leaving it on the top of the stack;$(li)manipulate the info gathered (e.g. adding two numbers); or$(li)perform some magical effect, like summoning lightning or an explosion. (These actions are called \"spells.\")$(p)When I start casting a _Hex, it creates an empty stack. Actions manipulate the top of that stack.",
      "101.6": "For example, $(l:patterns/basics#hexcasting:get_caster)$(action)Mind's Reflection/$ will create an iota representing $(italic)me/$, the caster, and add it to the top of the stack. $(l:patterns/basics#hexcasting:get_entity_pos)$(action)Compass Purification/$ will take the iota at the top the stack, if it represents an entity, and transform it into an iota representing that entity's location.$(br2)So, drawing those patterns in that order would result in an iota on the stack representing my position.",
      "101.7": "$(thing)Iotas/$ can represent things like myself or my position, but there are several other types I can manipulate with $(thing)Actions/$. Here's a comprehensive list:$(li)Numbers (which some legends called \"doubles\");$(li)Vectors, a collection of three numbers representing a position, movement, or direction in the world;$(li)Booleans or \"bools\" for short, representing an abstract True or False,",
      "101.8": "$(li)Entities, like myself, chickens, and minecarts;$(li)Influences, peculiar types of iota that seem to represent abstract ideas;$(li)Patterns themselves, used for crafting magic items and truly mind-boggling feats like $(italic)spells that cast other spells/$; and$(li)A list of several of the above, gathered into a single iota.",
      "101.9": "Of course, there's no such thing as a free lunch. All spells, and certain other actions, require _media as payment.$(br2)The best I can figure, a _Hex is a little bit like a plan of action presented to Nature-- in this analogy, the _media is used to provide the arguments to back it up, so Nature will accept your plan and carry it out.",
      "101.10": "That aside, it doesn't seem like anyone has done much research on exactly how $(italic)much/$ any particular piece of $(l:items/amethyst)$(item)amethyst/$ is valued. The best I can tell, an $(l:items/amethyst)$(item)Amethyst Shard/$ is worth about five pieces of $(l:items/amethyst)$(item)Amethyst Dust/$, and a $(l:items/amethyst)$(item)Charged Amethyst Crystal/$ is worth about ten.$(br2)Strangely enough, it seems like no other form of $(l:items/amethyst)$(item)amethyst/$ is suitable to be used in the casting of a _Hex. I suspect that whole blocks or crystals are too solid to be easily unraveled into _media.",
      "101.11": "It's also worth noting that each action will consume the _media it needs immediately, rather than all at once when the Hex finishes. Also, an action will always consume entire items-- an action that only requires one $(l:items/amethyst)$(item)Amethyst Dust/$'s worth of _media will consume an entire $(l:items/amethyst)$(item)Charged Amethyst Crystal/$, if that's all that's present in my inventory.$(br2)Thus, it might be a good idea to bring dust for spellcasting too-- waste not, want not...",
      "101.12": "I should also be careful to make sure I actually have enough Amethyst in my inventory-- some old texts say that Nature is happy to use one's own mind as payment instead. They describe the feeling as awful but strangely euphoric, \"[...] an effervescent dissolution into light and energy...\" Perhaps that's why all the old practitioners of the art went mad. I can't imagine burning pieces of my mind for power is $(italic)healthy/$.",
      "101.13": "Maybe something's changed, though. In my experiments, I've never managed to do it; if I run out of _media, the spell will simply fail to cast, as if some barrier is blocking it from harming me. $(br2)It would be interesting to get to the bottom of that mystery, but for now I suppose it'll keep me safe.",
      "101.14": "I have also found an amusing tidbit on why so many practitioners of magic in general seem to go mad, which I may like as some light and flavorful reading not canonical to my world.$(br2)$(italic)Content Warning: some body horror and suggestive elements./$",
      "101.14.link_text": "Goblin Punch",
      "101.15": "Finally, it seems spells have a maximum range of influence, about 32 blocks from my position. Trying to affect anything outside of that will cause the spell to fail.$(br2)Despite this, if I have a player's reference, I can affect them from anywhere. This only applies to affecting them directly, though; I cannot use this to affect the world around them if they're outside of my range.$(br)I ought to be careful when giving out a reference like that. While friendly _Hexcasters could use them to great effect and utility, I shudder to think of what someone malicious might do with this.",
      
      
      "vectors.1": "It seems I will need to be adroit with vectors if I am to get anywhere in my studies. I have compiled some resources here on vectors if I find I do not know how to work with them.$(br2)First off, an enlightening video on the topic.",
      "vectors.1.link_text": "3blue1brown",
      "vectors.2": "Additionally, it seems that the mages who manipulated $(thing)Psi energy/$ (the so-called \"spellslingers\"), despite their poor naming sense, had some quite-effective lessons on vectors to teach their acolytes. I've taken the liberty of linking to one of their texts on the next page.$(br2)They seem to have used different language for their spellcasting:$(li)A \"Spell Piece\" was their name for an action;$(li)a \"Trick\" was their name for a spell; and$(li)an \"Operator\" was their name for a non-spell action.",
      "vectors.3": "Link here.",
      "vectors.3.link_text": "Psi Codex",
      
      
      "mishaps.1": "Unfortunately, I am not (yet) a perfect being. I make mistakes from time to time in my study and casting of _Hexes; for example, misdrawing a pattern, or trying to an invoke an action with the wrong iotas. And Nature usually doesn't look too kindly on my mistakes-- causing what is called a $(italic)mishap/$.",
      "mishaps.2": "A pattern that causes a mishap will glow red in my grid. Depending on the type of mistake, I can also expect a certain deleterious effect and a spray of red and colorful sparks as the mishandled _media curdles into light of a given color.$(br2)I also get a helpful error message in my chat, but a nagging feeling tells that will change once the \"mod updates,\" whatever that means. I shouldn't rely on always having it.",
      "mishaps.3": "Fortunately, although the bad effects of mishaps are certainly $(italic)annoying/$, none of them are especially destructive in the long term. Nothing better to do than dust myself off and try again ... but I should strive for better anyways.$(br2)Following is a list of mishaps I have compiled.",
      "mishaps.invalid_pattern.title": "Invalid Pattern",
      "mishaps.invalid_pattern": "The pattern drawn is not associated with any action.$(br2)Causes yellow sparks, and a $(l:casting/influences)$(action)Garbage/$ will be pushed to the top of my stack.",
      "mishaps.not_enough_iotas.title": "Not Enough Iotas",
      "mishaps.not_enough_iotas": "The action required more iotas than were on the stack.$(br2)Causes light gray sparks, and as many $(l:casting/influences)$(action)Garbages/$ as would be required to fill up the argument count will be pushed.",
      "mishaps.incorrect_iota.title": "Incorrect Iota",
      "mishaps.incorrect_iota": "The action that was executed expected an iota of a certain type for an argument, but it got something invalid. If multiple iotas are invalid, the error message will only tell me about the error deepest in the stack.$(br2)Causes dark gray sparks, and the invalid iota will be replaced with $(l:casting/influences)$(action)Garbage/$.",
      "mishaps.vector_out_of_range.title": "Vector Out of Ambit",
      "mishaps.vector_out_of_range": "The action tried to affect the world at a point that was out of my range.$(br2)Causes magenta sparks, and the items in my hands will be yanked out and flung towards the offending location.",
      "mishaps.entity_out_of_range.title": "Entity Out of Ambit",
      "mishaps.entity_out_of_range": "The action tried to affect an entity that was out of my range.$(br2)Causes pink sparks, and the items in my hands will be yanked out and flung towards the offending entity.",
      "mishaps.entity_immune.title": "Entity is Immune",
      "mishaps.entity_immune": "The action tried to affect an entity that cannot be altered by it.$(br2)Causes blue sparks, and the items in my hands will be yanked out and flung towards the offending entity.",
      "mishaps.math_error.title": "Mathematical Error",
      "mishaps.math_error": "The action did something offensive to the laws of mathematics, such as dividing by zero.$(br2)Causes red sparks, pushes a $(l:casting/influences)$(action)Garbage/$ to my stack, and my mind will be ablated, stealing half the vigor I have remaining. It seems that Nature takes offense to such operations, and divides $(italic)me/$ in retaliation.",
      "mishaps.incorrect_item.title": "Incorrect Item",
      "mishaps.incorrect_item": "The action requires some sort of item, but the item I supplied was not suitable.$(br2)Causes brown sparks. If the offending item was in my hand, it will be flung to the floor. If it was in entity form, it will be flung in the air.",
      "mishaps.incorrect_block.title": "Incorrect Block",
      "mishaps.incorrect_block": "The action requires some sort of block at a target location, but the block supplied was not suitable.$(br2)Causes bright green sparks, and causes an ephemeral explosion at the given location. The explosion doesn't seem to harm me, the world, or anything else though; it's just startling.",
      "mishaps.retrospection.title": "Hasty Retrospection",
      "mishaps.retrospection": "I attempted to draw $(l:patterns/patterns_as_iotas#hexcasting:close_paren)$(action)Retrospection/$ without first drawing $(l:patterns/patterns_as_iotas#hexcasting:open_paren)$(action)Introspection/$.$(br2)Causes orange sparks, and pushes the pattern for $(l:patterns/patterns_as_iotas#hexcasting:close_paren)$(action)Retrospection/$ to the stack as a pattern iota.",
      "mishaps.too_deep.title": "Delve Too Deep",
      "mishaps.too_deep": "Evaluated too many spells with meta-evaluation from one spell.$(br2)Causes dark blue sparks, and chokes all the air out of me.",
      "mishaps.true_name.title": "Transgress Other",
      "mishaps.true_name": "I attempted to $(l:patterns/readwrite#hexcasting:write)$(action)save a reference/$ to another player to a permanent medium.$(br2)Causes black sparks, and robs me of my sight for approximately one minute.",
      "mishaps.disabled.title": "Disallowed Action",
      "mishaps.disabled": "I tried to cast an action that has been disallowed by a server administrator.$(br2)Causes black sparks.",
      "mishaps.other.title": "Catastrophic Failure",
      "mishaps.other": "A bug in the mod caused an iota of an invalid type or otherwise caused the spell to crash. $(l:https://github.com/gamma-delta/HexMod/issues)Please open a bug report!/$$(br2)Causes black sparks.",
      
      
      "stack.1": "A $(thing)Stack/$, also known as a \"LIFO\", is a concept borrowed from computer science. In short, it's a collection of things designed so that you can only interact with the most recently used thing.$(br2)Think of a stack of plates, where new plates are added to the top: if you want to interact with a plate halfway down the stack, you have to remove the plates above it in order to get ahold of it.",
      "stack.2": "Because a stack is so simple, there's only so many things you can do with it:$(li)$(italic)Adding something to it/$, known formally as pushing,$(li)$(italic)Removing the last added element/$, known as popping, or$(li)$(italic)Examining or modifying the last added element/$, known as peeking.$(br)We call the last-added element the \"top\" of the stack, in accordance with the dinner plate analogy.$(p)As an example, if we push 1 to a stack, then push 2, then pop, the top of the stack is now 1.",
      "stack.3": "Actions are (on the most part) restricted to interacting with the casting stack in these ways. They will pop some iotas they're interested in (known as \"arguments\" or \"parameters\"), process them, and push some number of results.$(br2)Of course, some actions (e.g. $(l:patterns/basics#hexcasting:get_caster)$(action)Mind's Reflection/$) might pop no arguments, and some actions (particularly spells) might push nothing afterwards.",
      "stack.4": "Even more complicated actions can be expressed in terms of pushing, popping, and peeking. For example, $(l:patterns/stackmanip#hexcasting:swap)$(action)Jester's Gambit/$ swaps the top two items of the stack. This can be thought of as popping two items and pushing them in opposite order. For another, $(l:patterns/stackmanip#hexcasting:duplicate)$(action)Gemini Decomposition/$ duplicates the top of the stack-- in other words, it peeks the stack and pushes a copy of what it finds.",
      
      
      "naming.1": "The names given to actions by the ancients were certainly peculiar, but I think there's a certain kind of logic to them.$(br2)There seem to be certain groups of actions with common names, named for the number of iotas they remove from and add to the stack.",
      "naming.2": "$(li)A $(thing)Reflection/$ pops nothing and pushes one iota.$(li)A $(thing)Purification/$ pops one and pushes one.$(li)A $(thing)Distillation/$ pops two and pushes one.$(li)An $(thing)Exaltation/$ pops three or more and pushes one.$(li)A $(thing)Decomposition/$ pops one argument and pushes two.$(li)A $(thing)Disintegration/$ pops one and pushes three or more.$(li)Finally, a $(thing)Gambit/$ pushes or pops some other number (or rearranges the stack in some other manner).",
      "naming.3": "Spells seem to be exempt from this nomenclature and are more or less named after what they do-- after all, why call it a $(action)Demoman's Gambit/$ when you could just say $(l:patterns/spells/basic#hexcasting:explode)$(action)Explosion/$?",
      
      
      "influences.1": "Influences are ... strange, to say the least. Whereas most iotas seem to represent something about the world, influences represent something more... abstract, or formless.$(br2)For example, one influence I've named $(l:casting/influences)$(thing)Null/$ seems to represent nothing at all. It's created when there isn't a suitable answer to a question asked, such as an $(l:patterns/basics#hexcasting:raycast)$(action)Archer's Distillation/$ facing the sky.",
      "influences.2": "In addition, I've discovered a curious triplet of influences I've named $(l:patterns/patterns_as_iotas#hexcasting:escape)$(action)Consideration/$, $(l:patterns/patterns_as_iotas#hexcasting:open_paren)$(action)Introspection/$, and $(l:patterns/patterns_as_iotas#hexcasting:close_paren)$(action)Retrospection/$. They seem to have properties of both patterns and other influences, yet act very differently. I can use these to add patterns to my stack as iotas, instead of matching them to actions. $(l:patterns/patterns_as_iotas)My notes on the subject are here/$.",
      "influences.3": "Finally, there seems to be an infinite family of influences that just seem to be a tangled mess of _media. I've named them $(l:casting/influences)$(action)Garbage/$, as they are completely useless. They seem to appear in my stack at various places in response to $(l:casting/mishaps)$(thing)mishaps/$, and appear to my senses as a nonsense jumble.",
      
      
      "mishaps2.1": "I have discovered new and horrifying modes of failure. I must not succumb to them.",
      "mishaps2.bad_mindflay.title": "Inert Mindflay",
      "mishaps2.bad_mindflay": "Attempted to flay the mind of something that I have either already used, or of a character not suitable for the target block.$(br2)Causes dark green sparks, and kills the subject. If a villager sees that, I doubt they would look on it favorably.",
      "mishaps2.no_circle.title": "Lack Spell Circle",
      "mishaps2.no_circle": "Tried to cast an action requiring a spell circle without a spell circle.$(br2)Causes light blue sparks, and upends my inventory onto the ground.",
      "mishaps2.no_record.title": "Lack Akashic Record",
      "mishaps2.no_record": "Tried to access an $(l:greatwork/akashiclib)$(item)Akashic Record/$ at a location where there isn't one.$(br2)Causes purple sparks, and steals away some of my experience.",
      
      
      "_comment": "Items",
      
      
      "amethyst.dust": "It seems that I'll find three different forms of amethyst when breaking a crystal inside a geode. The smallest denomination seems to be a small pile of shimmering dust, worth a relatively small amount of _media.",
      "amethyst.shard": "The second is a whole shard of amethyst, of the type non-_Hexcasters might be used to. This has about as much _media inside as five $(l:items/amethyst)$(item)Amethyst Dust/$.",
      "amethyst.crystal": "Finally, I'll rarely find a large crystal crackling with energy. This has about as much _media inside as ten units of $(l:items/amethyst)$(item)Amethyst Dust/$ (or two $(l:items/amethyst)$(item)Amethyst Shards/$).",
      "amethyst.lore": "$(italic)The old man sighed and raised a hand toward the fire. He unlocked a part of his brain that held the memories of the mountains around them. He pulled the energies from those lands, as he learned to do in Terisia City with Drafna, Hurkyl, the archimandrite, and the other mages of the Ivory Towers. He concentrated, and the flames writhed as they rose from the logs, twisting upon themselves until they finally formed a soft smile./$",
      
      
      "staff.1": "A $(l:items/staff)$(item)Staff/$ is my entry point into casting all _Hexes, large and small. By holding it and pressing $(thing)$(k:use)/$, I begin casting a _Hex; then I can click and drag to draw patterns.$(br2)It's little more than a chunk of _media on the end of a stick; that's all that's needed, after all.",
      "staff.crafting.header": "Staves",
      "staff.crafting.desc": "$(italic)Don't fight; flame, light; ignite; burn bright./$",
      
      
      "lens.1": "_Media can have peculiar effects on any type of information, in specific circumstances. Coating a glass in a thin film of it can lead to ... elucidating insights.$(br2)By holding a $(l:items/lens)$(item)Scrying Lens/$ in my hand, certain blocks will display additional information when I look at them.",
      "lens.2": "For example, looking at a piece of $(item)Redstone/$ will display its signal strength. I suspect I will discover other blocks with additional insight as my studies into my art progress.$(br2)In addition, holding it while casting using a $(l:items/staff)$(item)Staff/$ will shrink the spacing between dots, allowing me to draw more on my grid.$(br2)I can also wear it on my head as a strange sort of monocle.",
      "lens.crafting.desc": "$(italic)You must learn... to see what you are looking at./$",
      
      
      "thought_knot.1": "The forgetful often tie a piece of string about their finger to help them remember something important. I believe this idea might be of use in my art. A specially knotted piece of string should be able to hold a single iota stably, irregardless of my stack.$(br2)I will call my invention a $(item)Thought-Knot/$.",
      "thought_knot.2": "When I craft it, it stores no iota. Using $(l:patterns/readwrite#hexcasting:write)$(action)Scribe's Gambit/$ while holding a $(item)Thought-Knot/$ in my other hand will remove the top of the stack and save it into the $(item)Thought-Knot/$. Using $(l:patterns/readwrite#hexcasting:read)$(action)Scribe's Reflection/$ will copy whatever iota's in the $(item)Thought-Knot/$ and add it to the stack.$(br2)Once a $(item)Thought-Knot/$ has been written to, the string is indelibly tangled; the iota can be read any number of times, but there is no way to erase or overwrite it. Fortunately, they are not expensive.",
      "thought_knot.3": "Also, if I store an entity in a $(item)Thought-Knot/$ and try to recall it after the referenced entity has died or otherwise disappeared, the $(l:patterns/readwrite#hexcasting:read)$(action)Scribe's Reflection/$ will add $(l:casting/influences)$(thing)Null/$ to the stack instead.",
      "thought_knot.crafting.desc": "$(italic)How would you feel if someone saw you wearing a sign that said, \"I am dashing and handsome?\"/$",
      
      
      "focus.1": "A $(item)Focus/$ is like a $(l:items/thought_knot)$(item)Thought-Knot/$, in that iota can be written to or read from it. However, the advantage of a focus is that it is $(italic)reusable/$. If I make a mistake in the iota I write to a $(item)Focus, I can simply cast $(l:patterns/readwrite#hexcasting:write)$(action)Scribe's Gambit/$ again and write over the iota inside.",
      "focus.2": "If I wish to protect a $(l:items/focus)$(item)focus/$ from accidentally being overwritten, I can seal it with wax by crafting it with a $(item)Honeycomb/$. Attempting to use $(l:patterns/readwrite#hexcasting:write)$(action)Scribe's Gambit/$ on a sealed focus will fail.$(br2)$(l:patterns/spells/hexcasting#hexcasting:erase)$(action)Erase Item/$ will remove this seal along with the contents.",
      "focus.3": "Indeed, the only advantage of my $(l:items/thought_knot)$(item)Thought-Knot/$s have over $(item)Foci/$ is that $(item)Foci/$ are more expensive to produce. My research indicates that the early practitioners of the art used exclusively $(item)Foci/$, with the $(l:items/thought_knot)$(item)Thought-Knot/$ being an original creation of mine.$(br2)Whoever those ancient people were, they must have been very prosperous.",
      "focus.crafting.desc": "$(italic)Poison apples, poison worms./$",
      
      
      "abacus.1": "Although there are $(l:patterns/numbers)$(action)patterns for drawing numbers/$, I find them ... cumbersome, to say the least.$(br2)Fortunately, the old masters of my craft invented an ingenious device called an $(l:items/abacus)$(item)Abacus/$ to provide numbers to my casting. I simply set the number to what I want, then read the value using $(l:patterns/readwrite#hexcasting:read)$(action)Scribe's Reflection/$, just like I would read a $(l:items/thought_knot)$(item)Thought-Knot/$ or $(l:items/focus)$(item)Focus/$.",
      "abacus.2": "To operate one, I simply hold it, sneak, and scroll. If in my main hand, the number will increment or decrement by 1, or 10 if I am also holding Control/Command. If in my off hand, the number will increment or decrement by 0.1, or 0.001 if I am also holding Control/Command.$(br2)I can shake the abacus to reset it to zero by sneak-right-clicking.",
      "abacus.crafting.desc": "$(italic)Mathematics? That's for eggheads!/$",
      
      
      "spellbook.1": "A $(l:items/spellbook)$(item)Spellbook/$ is the culmination of my art-- it acts like an entire library of $(l:items/focus)$(item)Foci/$. Up to $(thing)sixty-four/$ of them, to be exact.$(br2)Each page can hold a single iota, and I can select the active page (the page that iotas are saved to and copied from) by sneak-scrolling while holding it, or simply holding it in my off-hand and scrolling while casting a _Hex.",
      "spellbook.2": "Like a $(l:items/focus)$(item)Focus/$, there exists a simple method to prevent accidental overwriting. Crafting it with a $(item)Honeycomb/$ will lacquer the current page, preventing $(l:patterns/readwrite#hexcasting:write)$(action)Scribe's Gambit/$ from modifying its contents. Also like a $(l:items/focus)$(item)Focus/$, using $(l:patterns/spells/hexcasting#hexcasting:erase)$(action)Erase Item/$ will remove the lacquer along with the page's contents.$(br2)I can also name each page individually in an anvil. Naming it will change only the name of the currently selected page, for easy browsing.",
      "spellbook.crafting.desc": "$(italic)Wizards love words. Most of them read a great deal, and indeed one strong sign of a potential wizard is the inability to get to sleep without reading something first.",
      
      
      "scroll.1": "A $(l:items/scroll)$(item)Scroll/$ is a convenient method of sharing a pattern with others. I can copy a pattern onto one with $(l:patterns/readwrite#hexcasting:write)$(action)Scribe's Gambit/$, after which it will display in a tooltip.$(br2)I can also place them on the wall as decoration or edification, like a painting, in sizes from 1x1 to 3x3 blocks. Using $(l:items/amethyst)$(item)Amethyst Dust/$ on such a scroll will have it display the stroke order.",
      "scroll.2": "In addition, I can also find so-called $(l:items/scroll)$(item)Ancient Scrolls/$ in the dungeons and strongholds of the world. These contain the stroke order of $(thing)Great Spells/$, powerful magicks rumored to be too powerful for the hands and minds of mortals...$(br2)If those \"mortals\" couldn't cast them, I'm not sure they deserve to know them.",
      "scroll.crafting.desc": "$(italic)I write upon clean white parchment with a sharp quill and the blood of my students, divining their secrets./$",
      
      
      "slate.1": "$(l:items/slate)$(item)Slates/$ are similar to $(l:items/scroll)$(item)Scrolls/$; I can copy a pattern to them and place them in the world to display the pattern.$(br2)However, I have read vague tales of grand assemblies of $(l:items/slate)$(item)Slates/$, used to cast $(l:greatwork/spellcircles)$(thing)great rituals/$ more powerful than can be handled by a $(l:items/staff)$(item)Staff/$.",
      "slate.2": "Perhaps this knowledge will be revealed to me with time. But for now, I suppose they make a quaint piece of decor.$(br2)At the least, they can be placed on any side of a block, unlike $(l:items/scroll)$(item)Scrolls/$.",
      "slate.crafting.desc": "$(italic)This is the letter \"a.\" Learn it./$",
      "slate.3": "I'm also aware of other types of $(l:items/slate)$(item)Slates/$, slates that do not contain patterns but seem to be inlaid with other ... strange ... oddities. It hurts my brain to think about them, as if my thoughts get bent around their designs, following their pathways, bending and wefting through their labyrinthine depths, through and through and through channeled through and processed and--$(br2)... I almost lost myself. Maybe I should postpone my studies of those.",
      
      
      "hexcasting.1": "Although the flexibility of casting _Hexes \"on the go\" with my $(l:items/staff)$(item)Staff/$ is quite helpful, it's a huge pain to have to wave it around repeatedly just to accomplish a basic task. If I could save a common spell for later reuse, it would simplify things a lot-- and allow me to share my _Hexes with friends, too.",
      "hexcasting.2": "To do this, I can craft one of three types of magic items: $(l:items/hexcasting)$(item)Cyphers/$, $(l:items/hexcasting)$(item)Trinkets/$, or $(l:items/hexcasting)$(item)Artifacts/$. All of them hold the patterns of a given _Hex inside, along with a small battery containing _media.$(br2)Simply holding one and pressing $(thing)$(k:use)/$ will cast the patterns inside, as if the holder had cast them out of a staff, using its internal battery.",
      "hexcasting.3": "Each item has its own quirks:$(br2)$(l:items/hexcasting)$(item)Cyphers/$ are fragile, destroyed after their internal _media reserves are gone, and $(italic)cannot/$ be recharged;$(br2)$(l:items/hexcasting)$(item)Trinkets/$ can be cast as much as the holder likes, as long as there's enough _media left, but become useless afterwards until recharged;",
      "hexcasting.4": "$(l:items/hexcasting)$(item)Artifacts/$ are the most powerful of all-- after their _media is depleted, they can use $(l:items/amethyst)$(item)Amethyst/$ from the holder's inventory to pay for the _Hex, just as I do when casting with a $(l:items/staff)$(item)Staff/$. Of course, this also means the spell might consume their mind if there's not enough $(l:items/amethyst)$(item)Amethyst/$.$(br2)Once I've made an empty magic item in a mundane crafting bench, I infuse the _Hex into it using (what else but) a spell appropriate to the item. $(l:patterns/spells/hexcasting)I've catalogued the patterns here./$",
      "hexcasting.5": "Each infusion spell requires an entity and a list of patterns on the stack. The entity must be a _media-holding item entity (i.e. $(l:items/amethyst)$(item)amethyst/$ crystals, dropped on the ground); the entity is consumed and forms the battery.$(br2)Usefully, it seems that the _media in the battery is not consumed in chunks as it is when casting with a $(l:items/staff)$(item)Staff/$-- rather, the _media \"melts down\" into one continuous pool. Thus, if I store a _Hex that only costs one $(l:items/amethyst)$(item)Amethyst Dust/$'s worth of media, a $(l:items/amethyst)$(item)Charged Crystal/$ used as the battery will allow me to cast it 10 times.",
      "hexcasting.crafting.desc": "$(italic)We have a saying in our field: \"Magic isn't\". It doesn't \"just work,\" it doesn't respond to your thoughts, you can't throw fireballs or create a roast dinner from thin air or turn a bunch of muggers into frogs and snails./$",
      
      
      "phials.1": "I find it quite ... irritating, how Nature refuses to give me change for my work. If all I have on hand is $(l:items/amethyst)$(item)Charged Amethyst/$, even the tiniest $(l:patterns/basics#hexcasting:raycast)$(action)Archer's Purification/$ will consume the entire crystal, wasting the remaining _media.$(br2)Fortunately, it seems I've found a way to somewhat allay this problem.",
      "phials.2": "I've found old scrolls describing a $(item)Glass Bottle/$ infused with _media. When casting _Hexes, my spells would then draw _media out of the phial. The liquid form of the _media would let me take exact change, so to speak; nothing would be wasted. It's quite like the internal battery of a $(l:items/hexcasting)$(item)Trinket/$, or similar; I can even $(l:patterns/spells/hexcasting#hexcasting:recharge)$(action)Recharge/$ them in the same manner.",
      "phials.3": "Unfortunately, the art of actually $(italic)making/$ the things seems to have been lost to time. I've found a $(l:patterns/great_spells/make_battery#hexcasting:craft/battery)$(thing)hint at the pattern used to craft it/$, but the technique is irritatingly elusive, and I can't seem to do it successfully. I suspect I will figure it out with study and practice, though. For now, I will simply deal with the wasted _media...$(br2)But I won't settle for it forever.",
      "phials.desc": "$(italic)Drink the milk./$",
      
      
      "pigments.1": "The old practitioners of my art sometimes identified themselves by a color, emblematic of them and their _Hexes. Although their names have faded, their colors remain. It seems a special kind of pigment, offered to Nature in the right way, would \"[...] paint one's thoughts in a manner pleasing to Nature, inducing a miraculous change in personal colour.\"",
      "pigments.2": "I'm not certain on the specifics, but I believe I have isolated the formulae for many different colors and blends of pigments. To apply a pigment, I hold it in one hand and cast $(l:patterns/spells/colorize)$(action)Internalize Pigment/$ with the other; this consumes the pigment.$(br2)The pigments seem to affect the color of the sparks of _media emitted when I cast a _Hex and my $(l:patterns/spells/sentinels)$(thing)sentinel/$, but I don't doubt that the color will show up elsewhere.",
      "pigments.colored.crafting.header": "Chromatic Pigments",
      "pigments.colored.crafting.desc": "Pigments in all the colors of the rainbow.",
      "pigments.special": "And finally, a pair of special pigments. $(item)Soulglimmer Pigment/$ shines with colors wholly unique to me, and $(item)Vacant Pigment/$ restores my original purplish-orange spread.$(br2)$(italic)And all the colors I am inside have not been invented yet./$",
      
      
      "edified.1": "By infusing _media into a sapling via the use of $(l:patterns/spells/blockworks#hexcasting:edify)$(action)Edify Sapling/$, I can create what is called an $(l:items/edified)$(thing)Edified Tree/$. They tend to be tall and pointy, with ridged bark and wood that grows in a strange spiral pattern. Their leaves come in three pretty colors.",
      "edified.2": "I would assume the wood would have some properties relevant to _Hexcasting. But, if it does, I cannot seem to find them. For all intents and purposes it appears to be just wood, albeit of a very strange color.$(br2)I suppose for now I will use it for decoration; the full suite of standard wood blocks can be crafted from them.$(br2)Of course, I can strip them with an axe as well.",
      "edified.crafting.desc": "$(italic)Their smooth trunks, with white bark, gave the effect of enormous columns sustaining the weight of an immense foliage, full of shade and silence./$",
      
      
      "jeweler_hammer.1": "After being careless with the sources of my _media one too many times, I have devised a tool to work around my clumsiness.$(br2)Using the delicate nature of crystallized _media as a fixture for a pickaxe, I can create the $(l:items/jeweler_hammer)$(item)Jeweler's Hammer/$. It acts like an $(item)Iron Pickaxe/$, for the most part, but can't break anything that takes up an entire block's space.",
      "jeweler_hammer.crafting.desc": "$(italic)Carefully, she cracked the half ruby, letting the spren escape./$",
      
      
      "decoration.1": "In the course of my studies I have discovered some building blocks and trifles that I may find aesthetically pleasing. I've compiled the methods of making them here.",
      "decoration.ancient_scroll.crafting.desc": "Brown dye works well enough to simulate the look of an $(l:items/scroll)$(item)ancient scroll/$.",
      "decoration.tiles.crafting.desc": "$(l:items/decoration)$(item)Amethyst Tiles/$ can also be made in a Stonecutter.$(br2)$(l:items/decoration)$(item)Blocks of Amethyst Dust/$ (next page) will fall like sand.",
      "decoration.sconce.crafting.desc": "$(l:items/decoration)$(item)Amethyst Sconces/$ emit light and particles, as well as a pleasing chiming sound.",
      
      
      "_comment": "The Work",
      
      
      "the_work.1": "I have seen so many things. Unspeakable things. Innumerable things. I could write three words and turn my mind inside-out and smear my brains across the shadowed walls of my skull to decay into fluff and nothing.",
      "the_work.2": "I have seen staccato-needle patterns and acid-etched schematics written on the inside of my eyelids. They smolder there-- they dance, they taunt, they $(italic)ache/$. I'm possessed by an intense $(italic)need/$ to draw them, create them. Form them. Liberate them from the gluey shackles of my mortal mind-- present them in their Glory to the world for all to see.$(p)All shall see.$(p)All will see.",
      
      
      "brainsweeping.1": "A secret was revealed to me. I saw it. I cannot forget its horror. The idea skitters across my brain.$(br2)I believed-- oh, foolishly, I $(italic)believed/$ --that _Media is the spare energy left over by thought. But now I $(italic)know/$ what it is: the energy $(italic)of/$ thought.",
      "brainsweeping.2": "It is produced by thinking sentience and allows sentience to think. It is a knot tying that braids into its own string. The Entity I naively anthromorphized as Nature is simply a grand such tangle, or perhaps the set of all tangles, or ... if I think it hurts I have so many synapses and all of them can think pain at once ALL OF THEM CAN SEE$(br2)I am not holding on. My notes. Quickly.",
      "brainsweeping.3": "The villagers of this world have enough consciousness left to be extracted. Place it into a block, warp it, change it. Intricate patterns caused by different patterns of thought, the abstract neural pathways of their jobs and lives mapped into the cold physic of solid atoms.$(br2)This is what $(l:patterns/great_spells/brainsweep)$(action)Flay Mind/$ does, the extraction. Target the villager entity and the destination block. Ten $(l:items/amethyst)$(item)Charged Amethyst/$ for this perversion of will.",
      "brainsweeping.budding_amethyst": "And an application. For this flaying, any sort of villager will do, if it has developed enough. Other recipes require more specific types. NO MORE must I descend into the hellish earth for my _media.",
      
      
      "spellcircles.1": "I KNOW what the $(l:items/slate)$(item)slates/$ are for. The grand assemblies lost to time. The patterns scribed on them can be actuated in sequence, automatically. Thought and power ricocheting through, one by one by one by one by one by through and through and THROUGH AND -- I must not I must not I should know better than to think that way.",
      "spellcircles.2": "To start the ritual I need an $(l:greatwork/impetus)$(item)Impetus/$ to create a self-sustaining wave of _media. That wave travels along a track of $(l:items/slate)$(item)slates/$ or other blocks suitable for the energies, one by one, collecting any patterns it finds. Once the wave circles back around to the $(l:greatwork/impetus)$(item)Impetus/$, all the patterns encountered are cast in order.$(br2)The direction the _media exits any given block MUST be unambiguous, or the casting will fail at the block with too many neighbors.",
      "spellcircles.3": "As a result, the outline of the spell \"circle\" may be any closed shape, concave or convex, and it may face any direction. In fact, with the application of certain other blocks it is possible to make a spell circle that spans all three dimensions. I doubt such an oddity has very much use, but I must allocate myself a bit of vapid levity to encourage my crude mind to continue my work.",
      "spellcircles.4": "Miracle of miracles, the circle will withdraw _media neither from my inventory nor my mind. Instead, crystallized shards of _media must be provided to the $(l:greatwork/impetus)$(item)Impetus/$ via hopper, or other such artifice.$(br2)The application of a $(l:items/lens)$(item)Scrying Lens/$ will show how much _media is inside an $(l:greatwork/impetus)$(item)Impetus/$, in units of dust.",
      "spellcircles.5": "However, a spell cast from a circle does have one major limitation: it is unable to affect anything outside of the circle's bounds. That is, it cannot interact with anything outside of the cuboid of minimum size which encloses every block composing it (so a concave spell circle can still affect things in the concavity).",
      "spellcircles.6": "There is also a limit on the number of blocks the wave can travel through before it disintegrates, but it is large enough I doubt I will have any trouble.$(br2)Conversely, there are some actions that can only be cast from a circle. Fortunately, none of them are spells; they all seem to deal with components of the circle itself. My notes on the subject are $(l:patterns/circle)here/$.",
      "spellcircles.7": "I also found a sketch of a spell circle used by the ancients buried in my notes. Facing this page is my (admittedly poor) copy of it.$(br2)The patterns there would have been executed counter-clockwise, starting with $(l:patterns/basics#hexcasting:get_caster)$(action)Mind's Reflection/$ and ending with $(l:patterns/great_spells/teleport#hexcasting:teleport)$(action)Greater Teleport/$.",
      "spellcircles.teleport_circle.title": "Teleportation Circle",
      
      
      "impetus.1": "The fluctuation of _media required to actuate a spell circle is complex. Even the mortal with sharpest eyes and steadiest hands could not serve as an $(l:greatwork/impetus)$(item)Impetus/$ and weave _media into the self-sustaining oroboros required.$(br2)The problem is that the mind is too full of other useless $(italics)garbage/$.",
      "impetus.2": "At a ... metaphysical level-- I must be careful with these thoughts, I cannot lose myself, I have become too valuable --moving _media moves the mind, and the mind must be moved for the process to work. But, the mind is simply too $(italic)heavy/$ with other thoughts to move nimbly enough.$(br2)It is like an artisan trying to repair a watch while wearing mittens.",
      "impetus.3": "There are several solutions to this conundrum: through meditative techniques one can learn to blank the mind, although I am not certain a mind free enough to actuate a circle can concentrate hard enough to do the motions.$(br2)Certain unsavory compounds can create a similar effect, but I know nothing of them and do not plan to learn. I must not rely on the chemicals of my brain.",
      "impetus.4": "The solution I aim for, then, is to specialize a mind. Remove it from the tyranny of nerves, clip all outputs but delicate splays of _media-manipulating apparati, cauterize all inputs but the signal to start its work.$(br2)The process of $(l:greatwork/brainsweeping)$(action)mindflaying/$ I am now familiar with will do excellently; the mind of a villager is complex enough to do the work, but not so complex as to resist its reformation.",
      "impetus.empty_impetus": "First, the cradle. Although it does not work as an $(l:greatwork/impetus)$(item)Impetus/$, the flow of _media in a circle will only exit out the side pointed to by the arrows. This allows me to change the plane in which the wave flows, for example.",
      "impetus.impetus_rightclick": "Then, to transpose the mind. Villagers of different professions will lend different actuation conditions to the resulting $(l:greatwork/impetus)$(item)Impetus/$. A $(l:greatwork/impetus)$(item)Toolsmith Impetus/$ activates on a simple $(k:use).",
      "impetus.impetus_storedplayer.1": "A $(l:greatwork/impetus)$(item)Cleric Impetus/$ must be bound to a player by using an item with a reference to that player, like a $(l:items/focus)$(item)Focus/$, on the block. Then, it activates when receiving a redstone signal.",
      "impetus.impetus_storedplayer.2": "Peculiarly to this $(l:greatwork/impetus)$(item)Impetus/$, the bound player, as well as a small region around them, are always accessible to the spell circle. It's as if they were standing within the bounds of the circle, no matter how far away they might stand.$(br2)The bound player is shown when looking at a $(l:greatwork/impetus)$(item)Cleric Impetus/$ through a $(l:items/lens)$(item)Scrying Lens/$.",
      "impetus.impetus_look": "A $(l:greatwork/impetus)$(item)Fletcher Impetus/$ activates when looked at for a short time.",
      
      
      "directrix.1": "Simpler than the task of creating a self-sustaining wave of _media is the task of directing it. Ordinarily the wave disintegrates when coming upon a crossroads, but with a mind to guide it, an exit direction can be controlled.$(br2)This manipulation is not nearly so fine as the delicacy of actuating a spell circle. In fact, it might be possible to do it by hand... but the packaged minds I have access to now would be so very convenient.",
      "directrix.2": "A $(l:greatwork/directrix)$(item)Directrix/$ accepts a wave of _media and determines to which of the arrows it will exit from, depending on the villager mind inside.$(br2)I am not certain if this idea was bestowed upon me, or if my mind is bent around the barrier enough to splint off its own ideas now... but if the idea came from my own mind, if I thought it, can it be said it was bestowed? The brain is a vessel for the mind and the mind is a vessel for ideas and the ideas vessel thought and thought sees all and knows all-- I MUST N O T",
      "directrix.empty_directrix": "Firstly, a design for the cradle ... although, perhaps \"substrate\" would be more accurate a word. Without a mind guiding it, the output direction is determined by microscopic fluctuations in the _media wave and surroundings, making it effectively random.",
      "directrix.directrix_redstone": "A $(l:greatwork/directrix)$(item)Mason Directrix/$ switches output side based on a redstone signal. Without a signal, the exit is the _media-color side; with a signal, the exit is the redstone-color side.",
      
      
      "akashiclib.1": "I KNOW SO MUCH it is ONLY RIGHT to have a place to store it all. Information can be stored in books but it is oh so so so so $(italic)slow/$ to write by hand and read by eye. I demand BETTER. And so I shall MAKE better.$(br2)... I am getting worse ... do not know if I have time to write everything bursting through my head before expiring.",
      "akashiclib.2": "The library. Here. My plans.$(br2)Like how patterns are associated with actions, I can associate my own patterns with iotas in any way I choose. An $(l:greatwork/akashiclib)$(item)Akashic Record/$ controls the library, and each $(l:greatwork/akashiclib)$(item)Akashic Bookshelf/$ stores one pattern mapped to one iota. These must all be directly connected together, touching, within 32 blocks. An $(l:greatwork/akashiclib)$(item)Akashic Ligature/$ doesn't do anything but count as a connecting block, to extend the size of my library.",
      "akashiclib.akashic_record": "Allocating and assigning patterns is simple but oh so boring. I have better things to do. I will need a mind well-used to its work for the extraction to stay sound.",
      "akashiclib.3": "Then to operate the library is simple, the patterns are routed through the librarian and it looks them up and returns the iota to you. Two actions do the work. $(l:patterns/akashic_patterns)Notes here/$.$(br2)Using an empty $(l:items/scroll)$(item)scroll/$ on a bookshelf copies the pattern there onto the $(l:items/scroll)$(item)scroll/$. Sneaking and using an empty hand clears the datum in the shelf.",
      
      
      "quenching_allays.1": "THEY ARE BITS OF MEDIA. How did I not see it sooner? They are -- as I am a heap of flesh with a scrap, blessed with a scrap of thought, an Allay is a self-sustaining quarrel of media pinned to a scrap of flesh. It explains everything -- their propensity for media, their response to music, I SEE NOW, HOW did the ones before NOT?",
      "quenching_allays.2": "And given this it is only RIGHT I conquer their peculiar minds -- their peculiar selves -- that is all they are, a mind, a self, a coda. Something about their phase speaks to me. I can... I can compress _media with them, overlay two wends of thought in one space, physical and cognitive, all and once.$(br2)Somehow, the process produces _media of its own. How? Perhaps -- perhaps MY work, the process of doing it --",
      "quenching_allays.3": "It matters not. I matter not. They matter not, all that matters is what it does. And this is it.$(br2)It must hurt so very much.",
      "quenching_allays.4": "The product is fragile. Breaking it shatters it into pieces, with $(thing)Fortune/$ increasing the yield... if I wish the block itself I need a silken touch.$(br2)The produced shards are worth thrice an $(l:items/amethyst)$(item)Charged Amethyst Crystal/$ apiece. The block itself is worth four of the shards.",
      "quenching_allays.5": "They are mercurial, they seem to twist and wink under my fingers, and by giving them a mentor in another form of _media they may be coerced into its shape, in an equivalent exchange of _media.",
      
      
      "fanciful_staves.1": "It is only right as I shed the husk of ignorance I replace my tools, my palm-polished staves. These new constructions of mine have no additional properties -- but they are so glorious, oh so Glorious... They match the radiance winking at the corners of my sight.",
      
      "_comment": "Patterns",
      
      
      "readers_guide.1": "I've divided all the valid patterns I've found into sections based on what they do, more or less. I've written down the stroke order of the patterns as well, if I managed to find it in my studies, with the start of the pattern marked with a red dot.$(br2)If an action is cast by multiple patterns, as is the case with some, I'll write them all side-by-side.",
      "readers_guide.2": "For a few patterns, however, I was $(italic)not/$ able to find the stroke order, just the shape. I suspect the order to draw them in are out there, locked away in the ancient libraries and dungeons of the world.$(br2)In such cases I just draw the pattern without any information on the order to draw it in.",
      "readers_guide.3": "I also write the types of iota that the action will consume or modify, a \"\u2192\", and the types of iota the action will create.$(p)For example, \"$(n)vector, number/$ \u2192 $(n)vector/$\" means the action will remove a vector and a number from the top of the stack, and then add a vector; or, put another way, will remove a number from the stack, and then modify the vector at the top of the stack. (The number needs to be on the top of the stack, with the vector right below it.)",
      "readers_guide.4": "\"\u2192 $(n)entity/$\" means it'll just push an entity. \"$(n)entity, vector/$ \u2192\" means it removes an entity and a vector, and doesn't push anything.$(br2)Finally, if I find the little dot marking the stroke order too slow or confusing, I can press $(thing)Control/Command/$ to display a gradient, where the start of the pattern is darkest and the end is lightest. This works on scrolls and when casting, too!",
      
      
      "basics_pattern.get_caster": "Adds me, the caster, to the stack.",
      "basics_pattern.entity_pos/eye": "Transforms an entity on the stack into the position of its eyes. I should probably use this on myself.",
      "basics_pattern.entity_pos/foot": "Transforms an entity on the stack into the position it is standing. I should probably use this on other entities.",
      "basics_pattern.get_entity_look": "Transforms an entity on the stack into the direction it's looking in, as a unit vector.",
      "basics_pattern.print": "Displays the top iota of the stack to me.",
      "basics_pattern.raycast.1": "Combines two vectors (a position and a direction) into the answer to the question: If I stood at the position and looked in the direction, what block would I be looking at? Costs a negligible amount of _media.",
      "basics_pattern.raycast.2": "If it doesn't hit anything, the vectors will combine into $(l:casting/influences)$(thing)Null/$.$(br2)A common sequence of patterns, the so-called \"raycast mantra,\" is $(action)Mind's Reflection/$, $(action)Compass Purification/$, $(action)Mind's Reflection/$, $(action)Alidade Purification/$, $(action)Archer's Distillation/$. Together, they return the vector position of the block I am looking at.",
      "basics_pattern.raycast/axis.1": "Like $(l:patterns/basics#hexcasting:raycast)$(action)Archer's Distillation/$, but instead returns a vector representing the answer to the question: Which $(italic)side/$ of the block am I looking at? Costs a negligible amount of _media.",
      "basics_pattern.raycast/axis.2": "More specifically, it returns the $(italic)normal vector/$ of the face hit, or a unit vector pointing perpendicular to the face.$(li)If I am looking at a floor, it will return (0, 1, 0).$(li)If I am looking at the south face of a block, it will return (0, 0, 1).",
      "basics_pattern.raycast/entity": "Like $(l:patterns/basics#hexcasting:raycast)$(action)Archer's Distillation/$, but instead returns the $(italic)entity/$ I am looking at. Costs a negligible amount of _media.",
      "basics_pattern.get_entity_height": "Transforms an entity on the stack into its height.",
      "basics_pattern.get_entity_velocity": "Transforms an entity on the stack into the direction in which it's moving, with the speed of that movement as that direction's magnitude.",
      
      
      "numbers.1": "Irritatingly, there is no easy way to draw numbers. Here is the method Nature deigned to give us.",
      "numbers.2": "First, I draw one of the two shapes shown on the other page. Next, the $(italic)angles/$ following will modify a running count starting at 0.$(li)Forward: Add 1$(li)Left: Add 5$(li)Right: Add 10$(li)Sharp Left: Multiply by 2$(li)Sharp Right: Divide by 2.$(br)The clockwise version of the pattern, on the right of the other page, will negate the value at the very end. (The left-hand counter-clockwise version keeps the number positive).$(p)Once I finish drawing, the number's pushed to the top of the stack.",
      "numbers.example.10.header": "Example 1",
      "numbers.example.10": "This pattern pushes 10.",
      "numbers.example.7.header": "Example 2",
      "numbers.example.7": "This pattern pushes 7: 5 + 1 + 1.",
      "numbers.example.-32.header": "Example 3",
      "numbers.example.-32": "This pattern pushes -32: negate 1 + 5 + 10 * 2.",
      "numbers.example.4.5.header": "Example 4",
      "numbers.example.4.5": "This pattern pushes 4.5: 5 / 2 + 1 + 1.",
      "numbers.3": "In certain cases it might be easier to just use an $(l:items/abacus)$(item)Abacus/$. But, it's worth knowing the \"proper\" way to do things.",
      
      
      "math.numvec": "Many mathematical operations function on both numbers and vectors. Such arguments are written as \"num/vec\".",
      "math.add.1": "Perform addition.",
      "math.add.2": "As such:$(li)With two numbers at the top of the stack, combines them into their sum.$(li)With a number and a vector, removes the number from the stack and adds it to each element of the vector.$(li)With two vectors, combines them by summing corresponding components into a new vector (i.e. [1, 2, 3] + [0, 4, -1] = [1, 6, 2]).",
      "math.sub.1": "Perform subtraction.",
      "math.sub.2": "As such:$(li)With two numbers at the top of the stack, combines them into their difference.$(li)With a number and a vector, removes the number from the stack and subtracts it from each element of the vector.$(li)With two vectors, combines them by subtracting each component.$(br2)In all cases, the top of the stack or its components are subtracted $(italic)from/$ the second-from-the-top.",
      "math.mul_dot.1": "Perform multiplication or the dot product.",
      "math.mul_dot.2": "As such:$(li)With two numbers, combines them into their product.$(li)With a number and a vector, removes the number from the stack and multiplies each component of the vector by that number.$(li)With two vectors, combines them into their $(l:https://www.mathsisfun.com/algebra/vectors-dot-product.html)dot product/$.",
      "math.div_cross.1": "Perform division or the cross product.",
      "math.div_cross.2": "As such:$(li)With two numbers, combines them into their quotient.$(li)With a number and a vector, removes the number and divides it by each element of the vector.$(li)With two vectors, combines them into their $(l:https://www.mathsisfun.com/algebra/vectors-cross-product.html)cross product/$.$(br2)In the first and second cases, the top of the stack or its components comprise the dividend, and the second-from-the-top or its components are the divisor.$(p)WARNING: Never divide by zero!",
      "math.abs_len.1": "Compute the absolute value or length.",
      "math.abs_len.2": "Replaces a number with its absolute value, or a vector with its length.",
      "math.pow_proj.1": "Perform exponentiation or vector projection.",
      "math.pow_proj.2": "With two numbers, combines them by raising the first to the power of the second.$(li)With a number and a vector, removes the number and raises each component of the vector to the number's power.$(li)With two vectors, combines them into the $(l:https://en.wikipedia.org/wiki/Vector_projection)vector projection/$ of the top of the stack onto the second-from-the-top.$(br2)In the first and second cases, the first argument or its components are the base, and the second argument or its components are the exponent.",
      "math.floor": "\"Floors\" a number, cutting off the fractional component and leaving an integer value.",
      "math.ceil": "\"Ceilings\" a number, raising it to the next integer value if it has a fractional component.",
      "math.construct_vec": "Combine three numbers at the top of the stack into a vector's X, Y, and Z components (top to bottom).",
      "math.deconstruct_vec": "Split a vector into its X, Y, and Z components (top to bottom).",
      "math.modulo": "Takes the modulus of two numbers. This is the amount $(italics)remaining/$ after division - for example, 5 %% 2 is 1, and 5 %% 3 is 2.",
      "math.coerce_axial": "For a vector, coerce it to its nearest axial direction, a unit vector. For a number, return the sign of the number; 1 if positive, -1 if negative. In both cases, zero is unaffected.",
      "math.random": "Creates a random number between 0 and 1.",
      
      
      "advanced_math.sin": "Takes the sine of an angle in radians, yielding the vertical component of that angle drawn on a unit circle. Related to the values of $(l:patterns/consts#hexcasting:const/double/pi)$(thing)π/$ and $(l:patterns/consts#hexcasting:const/double/tau)$(thing)τ/$.",
      "advanced_math.cos": "Takes the cosine of an angle in radians, yielding the horizontal component of that angle drawn on a unit circle. Related to the values of $(l:patterns/consts#hexcasting:const/double/pi)$(thing)π/$ and $(l:patterns/consts#hexcasting:const/double/tau)$(thing)τ/$.",
      "advanced_math.tan": "Takes the tangent of an angle in radians, yielding the slope of that angle drawn on a circle. Related to the values of $(l:patterns/consts#hexcasting:const/double/pi)$(thing)π/$ and $(l:patterns/consts#hexcasting:const/double/tau)$(thing)τ/$.",
      "advanced_math.arcsin": "Takes the inverse sine of a value with absolute value 1 or less, yielding the angle whose sine is that value. Related to the values of $(l:patterns/consts#hexcasting:const/double/pi)$(thing)π/$ and $(l:patterns/consts#hexcasting:const/double/tau)$(thing)τ/$.",
      "advanced_math.arccos": "Takes the inverse cosine of a value with absolute value 1 or less, yielding the angle whose cosine is that value. Related to the values of $(l:patterns/consts#hexcasting:const/double/pi)$(thing)π/$ and $(l:patterns/consts#hexcasting:const/double/tau)$(thing)τ/$.",
      "advanced_math.arctan": "Takes the inverse tangent of a value, yielding the angle whose tangent is that value. Related to the values of $(l:patterns/consts#hexcasting:const/double/pi)$(thing)π/$ and $(l:patterns/consts#hexcasting:const/double/tau)$(thing)τ/$.",
      "advanced_math.arctan2": "Takes the inverse tangent of a Y and X value, yielding the angle between the X-axis and a line from the origin to that point.",
      "advanced_math.logarithm": "Removes the number at the top of the stack, then takes the logarithm of the number at the top using the other number as its base. Related to the value of $(l:patterns/consts#hexcasting:const/double/e)$(thing)$(italic)e/$.",
      
      
      "sets.numlist": "Set operations are odd, in that some of them can accept two numbers or two lists, but not a combination thereof. Such arguments will be written as \"num, num/list, list\".$(br2)When numbers are used in those operations, they are being used as so-called binary \"bitsets\", lists of 1 and 0, true and false, \"on\" and \"off\".",
      "sets.or.1": "Unifies two sets.",
      "sets.or.2": "As such:$(li)With two numbers at the top of the stack, combines them into a bitset containing every \"on\" bit in either bitset.$(li)With two lists, this creates a list of every element from the first list, plus every element from the second list that is not in the first list. This is similar to $(l:patterns/lists#hexcasting:concat)$(action)Combination Distillation/$.",
      "sets.and.1": "Takes the intersection of two sets.",
      "sets.and.2": "As such:$(li)With two numbers at the top of the stack, combines them into a bitset containing every \"on\" bit present in $(italics)both/$ bitsets.$(li)With two lists, this creates a list of every element from the first list that is also in the second list.",
      "sets.xor.1": "Takes the exclusive disjunction of two sets.",
      "sets.xor.2": "As such:$(li)With two numbers at the top of the stack, combines them into a bitset containing every \"on\" bit present in $(italics)exactly one/$ of the bitsets.$(li)With two lists, this creates a list of every element in both lists that is $(italics)not/$ in the other list.",
      "sets.not": "Takes the inversion of a bitset, changing all \"on\" bits to \"off\" and vice versa. In my experience, this will take the form of that number negated and decreased by one. For example, 0 will become -1, and -100 will become 99.",
      "sets.to_set": "Removes duplicate entries from a list.",
      
      
      "consts.const/null": "Adds the $(l:casting/influences)$(thing)Null/$ influence to the top of the stack.",
      "consts.const/true": "Adds $(thing)True/$ to the top of the stack.",
      "consts.const/false": "Adds $(thing)False/$ to the top of the stack.",
      "consts.const/vec/x": "The left-hand counter-clockwise pattern adds [1, 0, 0] to the stack; the right-hand clockwise pattern adds [-1, 0, 0].",
      "consts.const/vec/y": "The left-hand counter-clockwise pattern adds [0, 1, 0] to the stack; the right-hand clockwise pattern adds [0, -1, 0].",
      "consts.const/vec/z": "The left-hand counter-clockwise pattern adds [0, 0, 1]; the right-hand clockwise pattern adds [0, 0, -1].",
      "consts.const/vec/0": "Adds [0, 0, 0] to the stack.",
      "consts.const/double/tau": "Adds τ, the radial representation of a complete circle, to the stack.",
      "consts.const/double/pi": "Adds π, the radial representation of half a circle, to the stack.",
      "consts.const/double/e": "Adds $(italic)e/$, the base of natural logarithms, to the stack.",
      
      
      "stackmanip.pseudo-novice.title": "Novice's Gambit",
      "stackmanip.pseudo-novice": "Removes the first iota from the stack.$(br2)This seems to be a special case of $(l:patterns/stackmanip#hexcasting:mask)$(action)Bookkeeper's Gambit/$.",
      "stackmanip.swap": "Swaps the top two iotas of the stack.",
      "stackmanip.rotate": "Yanks the iota third from the top of the stack to the top. [0, 1, 2] becomes [1, 2, 0].",
      "stackmanip.rotate_reverse": "Yanks the top iota to the third position. [0, 1, 2] becomes [2, 0, 1].",
      "stackmanip.duplicate": "Duplicates the top iota of the stack.",
      "stackmanip.over": "Copy the second-to-last iota of the stack to the top. [0, 1] becomes [0, 1, 0].",
      "stackmanip.tuck": "Copy the top iota of the stack, then put it under the second iota. [0, 1] becomes [1, 0, 1].",
      "stackmanip.2dup": "Copy the top two iotas of the stack. [0, 1] becomes [0, 1, 0, 1].",
      "stackmanip.stack_len": "Pushes the size of the stack as a number to the top of the stack. (For example, a stack of [0, 1] will become [0, 1, 2].)",
      "stackmanip.duplicate_n": "Removes the number at the top of the stack, then copies the top iota of the stack that number of times. (A count of 2 results in two of the iota on the stack, not three.)",
      "stackmanip.fisherman": "Grabs the element in the stack indexed by the number and brings it to the top. If the number is negative, instead moves the top element of the stack down that many elements.",
      "stackmanip.fisherman/copy": "Like $(action)Fisherman's Gambit/$, but instead of moving the iota, copies it.",
      "stackmanip.mask.1": "An infinite family of actions that keep or remove elements at the top of the stack based on the sequence of dips and lines.",
      "stackmanip.mask.2": "Assuming that I draw a Bookkeeper's Gambit pattern left-to-right, the number of iotas the action will require is determined by the horizontal distance covered by the pattern. From deepest in the stack to shallowest, a flat line will keep the iota, whereas a triangle dipping down will remove it.$(br2)If my stack contains $(italic)0, 1, 2/$ from deepest to shallowest, drawing the first pattern opposite will give me $(italic)1/$, the second will give me $(italic)0/$, and the third will give me $(italic)0, 2/$ (the 0 at the bottom is left untouched).",
      "stackmanip.swizzle.1": "Rearranges the top elements of the stack based on the given numerical code, which is the index of the permutation wanted.",
      "stackmanip.swizzle.2": "Although I can't pretend to know the mathematics behind calculating this permutation code, I have managed to dig up an extensive chart of them, enumerating all permutations of up to six elements.$(br2)If I wish to do further study, the key word is \"Lehmer Code.\"",
      "stackmanip.swizzle.link": "Table of Codes",
      
      
      "logic.bool_coerce": "Convert an argument to a boolean. The number $(thing)0/$, $(l:influences#null)$(thing)Null/$, and the empty list become False; everything else becomes True.",
      "logic.bool_to_number": "Convert a boolean to a number; True becomes $(thing)1/$, and False becomes $(thing)0/$.",
      "logic.not": "If the argument is True, return False; if it is False, return True.",
      "logic.or": "Returns True if at least one of the arguments are True; otherwise returns False.",
      "logic.and": "Returns True if both arguments are true; otherwise returns False.",
      "logic.xor": "Returns True if exactly one of the arguments is true; otherwise returns False.",
      "logic.if": "If the first argument is True, keeps the second and discards the third; otherwise discards the second and keeps the third.",
      "logic.equals": "If the first argument equals the second (within a small tolerance), return True. Otherwise, return False.",
      "logic.not_equals": "If the first argument does not equal the second (outside a small tolerance), return True. Otherwise, return False.",
      "logic.greater": "If the first argument is greater than the second, return True. Otherwise, return False.",
      "logic.less": "If the first argument is less than the second, return True. Otherwise, return False.",
      "logic.greater_eq": "If the first argument is greater than or equal to the second, return True. Otherwise, return False.",
      "logic.less_eq": "If the first argument is less than or equal to the second, return True. Otherwise, return False.",
      
      
      "entities.get_entity": "Transform the position on the stack into the entity at that location (or $(l:casting/influences)$(thing)Null/$ if there isn't one).",
      "entities.get_entity/animal": "Transform the position on the stack into the animal at that location (or $(l:casting/influences)$(thing)Null/$ if there isn't one).",
      "entities.get_entity/monster": "Transform the position on the stack into the monster at that location (or $(l:casting/influences)$(thing)Null/$ if there isn't one).",
      "entities.get_entity/item": "Transform the position on the stack into the dropped item at that location (or $(l:casting/influences)$(thing)Null/$ if there isn't one).",
      "entities.get_entity/player": "Transform the position on the stack into the player at that location (or $(l:casting/influences)$(thing)Null/$ if there isn't one).",
      "entities.get_entity/living": "Transform the position on the stack into the living creature at that location (or $(l:casting/influences)$(thing)Null/$ if there isn't one).",
      "entities.zone_entity/animal": "Take a position and maximum distance on the stack, and combine them into a list of animals near the position.",
      "entities.zone_entity/not_animal": "Take a position and maximum distance on the stack, and combine them into a list of non-animal entities near the position.",
      "entities.zone_entity/monster": "Take a position and maximum distance on the stack, and combine them into a list of monsters near the position.",
      "entities.zone_entity/not_monster": "Take a position and maximum distance on the stack, and combine them into a list of non-monster entities near the position.",
      "entities.zone_entity/item": "Take a position and maximum distance on the stack, and combine them into a list of dropped items near the position.",
      "entities.zone_entity/not_item": "Take a position and maximum distance on the stack, and combine them into a list of non-dropped-item entities near the position.",
      "entities.zone_entity/player": "Take a position and maximum distance on the stack, and combine them into a list of players near the position.",
      "entities.zone_entity/not_player": "Take a position and maximum distance on the stack, and combine them into a list of non-player characters near the position.",
      "entities.zone_entity/living": "Take a position and maximum distance on the stack, and combine them into a list of living creatures near the position.",
      "entities.zone_entity/not_living": "Take a position and maximum distance on the stack, and combine them into a list of non-living entities near the position.",
      "entities.zone_entity": "Take a position and maximum distance on the stack, and combine them into a list of all entities near the position.",
      
      
      "lists.index": "Remove the number at the top of the stack, then replace the list at the top with the nth element of that list (where n is the number you removed). Replaces the list with $(l:casting/influences)$(thing)Null/$ if the number is out of bounds.",
      "lists.slice": "Remove the two numbers at the top of the stack, then take a sublist of the list at the top of the stack between those indices, lower bound inclusive, upper bound exclusive. For example, the 0, 2 sublist of [0, 1, 2, 3, 4] would be [0, 1].",
      "lists.append": "Remove the top of the stack, then add it to the end of the list at the top of the stack.",
      "lists.concat": "Remove the list at the top of the stack, then add all its elements to the end of the list at the top of the stack.",
      "lists.empty_list": "Push an empty list to the top of the stack.",
      "lists.singleton": "Remove the top of the stack, then push a list containing only that element.",
      "lists.list_size": "Remove the list at the top of the stack, then push the number of elements in the list to the stack.",
      "lists.reverse_list": "Reverse the list at the top of the stack.",
      "lists.index_of": "Remove the iota at the top of the stack, then replace the list at the top with the first index of that iota within the list (starting from 0). Replaces the list with -1 if the iota doesn't exist in the list.",
      "lists.list_remove": "Remove the number at the top of the stack, then remove the nth element of the list at the top of the stack (where n is the number you removed).",
      "lists.modify_in_place": "Remove the top iota of the stack and the number at the top, then set the nth element of the list at the top of the stack to that iota (where n is the number you removed). Does nothing if the number is out of bounds.",
      "lists.last_n_list": "Remove $(italic)num/$ elements from the stack, then add them to a list at the top of the stack.",
      "lists.splat": "Remove the list at the top of the stack, then push its contents to the stack.",
      "lists.construct": "Remove the top iota, then add it as the first element to the list at the top of the stack.",
      "lists.deconstruct": "Remove the first iota from the list at the top of the stack, then push that iota to the stack.",
      
      
      "patterns_as_iotas.1": "One of the many peculiarities of this art is that $(italic)patterns themselves/$ can act as iotas-- I can even put them onto my stack when casting.$(br2)This raises a fairly obvious question: how do I express them? If I simply drew a pattern, it would hardly tell Nature to add it to my stack-- rather, it would simply be matched to an action.",
      "patterns_as_iotas.2": "Fortunately, Nature has provided me with a set of $(l:casting/influences)influences/$ that I can use to work with patterns directly.$(br2)In short, $(l:patterns/patterns_as_iotas#hexcasting:escape)$(action)Consideration/$ lets me add one pattern to the stack, and $(l:patterns/patterns_as_iotas#hexcasting:open_paren)$(action)Introspection/$ and $(l:patterns/patterns_as_iotas#hexcasting:close_paren)$(action)Retrospection/$ let me add a whole list.",
      "patterns_as_iotas.escape.1": "To use $(l:patterns/patterns_as_iotas#hexcasting:escape)$(action)Consideration/$, I draw it, then another arbitrary pattern. That second pattern is added to the stack.",
      "patterns_as_iotas.escape.2": "One may find it helpful to think of this as \"escaping\" the pattern onto the stack, if they happen to be familiar with the science of computers.$(br2)The usual use for this is to copy the pattern to a $(l:items/scroll)$(item)Scroll/$ or $(l:items/slate)$(item)Slate/$ using $(l:patterns/readwrite#hexcasting:write)$(action)Scribe's Gambit/$, and then perhaps decorating with them.",
      "patterns_as_iotas.parens.1": "Drawing $(l:patterns/patterns_as_iotas#hexcasting:open_paren)$(action)Introspection/$ makes my drawing of patterns act differently, for a time. Until I draw $(l:patterns/patterns_as_iotas#hexcasting:open_paren)$(action)Retrospection/$, the patterns I draw are saved. Then, when I draw $(l:patterns/patterns_as_iotas#hexcasting:close_paren)$(action)Retrospection/$, they are added to the stack as a list iota.",
      "patterns_as_iotas.parens.2": "If I draw another $(l:patterns/patterns_as_iotas#hexcasting:close_paren)$(action)Introspection/$, it'll still be saved to the list, but I'll then have to draw $(italic)two/$ $(l:patterns/patterns_as_iotas#hexcasting:close_paren)$(action)Retrospections/$ to get back to normal casting.",
      "patterns_as_iotas.parens.3": "Also, I can escape the special behavior of $(l:patterns/patterns_as_iotas#hexcasting:open_paren)$(action)Intro-/$ and $(l:patterns/patterns_as_iotas#hexcasting:close_paren)$(action)Retrospection/$ by drawing a $(l:patterns/patterns_as_iotas#hexcasting:escape)$(action)Consideration/$ before them, which will simply add them to the list without affecting which the number of $(l:patterns/patterns_as_iotas#hexcasting:close_paren)$(action)Retrospections/$ I need to return to casting.$(br2)If I draw two $(l:patterns/patterns_as_iotas#hexcasting:escape)$(action)Considerations/$ in a row while $(l:patterns/patterns_as_iotas#hexcasting:open_paren)$(action)introspecting/$, it will add a single $(l:patterns/patterns_as_iotas#hexcasting:escape)$(action)Consideration/$ to the list.",
      
      
      "readwrite.1": "This section deals with the storage of $(thing)Iotas/$ in a more permanent medium. Nearly any iota can be stored to a suitable item, such as a $(l:items/focus)$(item)Focus/$ or $(l:items/spellbook)$(item)Spellbook/$), and read back later. Certain items, such as an $(l:items/abacus)$(item)Abacus/$, can only be read from.$(br2)Iotas are usually read and written from the other hand, but it is also possible to read and write with an item when it is sitting on the ground as an item entity, or when in an item frame.",
      "readwrite.2": "There may be other entities I can interact with in this way. For example, a $(l:items/scroll)$(item)Scroll/$ hung on the wall can have its pattern read off of it.$(br2)However, it seems I am unable to save a reference to another player, only me. I suppose an entity reference is similar to the idea of a True Name; perhaps Nature is helping to keep our Names out of the hands of enemies. If I want a friend to have my Name I can make a $(l:items/focus)$(item)Focus/$ for them.",
      "readwrite.read": "Copy the iota stored in the item in my other hand and add it to the stack.",
      "readwrite.write": "Remove the top iota from the stack, and save it into the item in my other hand.",
      "readwrite.read/entity": "Like $(l:patterns/readwrite#hexcasting:read)$(action)Scribe's Reflection/$, but the iota is read out of an entity instead of my other hand.",
      "readwrite.write/entity": "Like $(l:patterns/readwrite#hexcasting:read)$(action)Scribe's Gambit/$, but the iota is written to an entity instead of my other hand.$(br2)Interestingly enough, it looks like I cannot write my own Name using this spell. I get a sense that I might be endangered if I could.",
      "readwrite.readable": "If the item in my other hand holds an iota I can read, returns True. Otherwise, returns False.",
      "readwrite.readable/entity": "Like $(l:patterns/readwrite#hexcasting:readable)$(action)Auditor's Reflection/$, but the readability of an entity is checked instead of my other hand.",
      "readwrite.writable": "If I could save an iota into the item in my other hand, returns True. Otherwise, returns False.",
      "readwrite.writable/entity": "Like $(l:patterns/readwrite#hexcasting:writable)$(action)Assessor's Reflection/$, but the writability of an entity is checked instead of my other hand.",
      "readwrite.local.title": "The Ravenmind",
      "readwrite.local": "Items are not the only places I can store information, however. I am also able to store that information in the _media of the _Hex itself, much like the stack, but separate. Texts refer to this as the $(l:patterns/readwrite#hexcasting:local)$(thing)ravenmind/$. It holds a single iota, much like a $(l:items/focus)$(item)Focus/$, and begins with $(l:casting/influences)$(thing)Null/$ like the same. It is preserved between iterations of $(l:patterns/meta#hexcasting:for_each)$(action)Thoth's Gambit/$, but only lasts as long as the _Hex it's a part of. Once I stop casting, the value will be lost.",
      "readwrite.write/local": "Removes the top iota from the stack, and saves it to my $(l:patterns/readwrite#hexcasting:local)$(thing)ravenmind/$, storing it there until I stop casting the _Hex.",
      "readwrite.read/local": "Copy the iota out of my $(l:patterns/readwrite#hexcasting:local)$(thing)ravenmind/$, which I likely just wrote with $(l:patterns/readwrite#hexcasting:write/local)$(action)Huginn's Gambit/$.",
      
      
      "meta.eval.1": "Remove a pattern or list of patterns from the stack, then cast them as if I had drawn them myself with my $(l:items/staff)$(item)Staff/$ (until a $(l:patterns/meta#hexcasting:halt)$(action)Charon's Gambit/$ is encountered). If an iota is escaped with $(l:patterns/patterns_as_iotas#hexcasting:escape)$(action)Consideration/$ or $(l:patterns/patterns_as_iotas#hexcasting:open_paren)$(action)its ilk/$, it will be pushed to the stack. Otherwise, non-patterns will fail.",
      "meta.eval.2": "This can be $(italic)very/$ powerful in tandem with $(l:items/focus)$(item)Foci/$.$(br2)It also makes the bureaucracy of Nature a \"Turing-complete\" system, according to one esoteric scroll I found.$(br2)However, it seems there's a limit to how many times a _Hex can cast itself-- Nature doesn't look kindly on runaway spells!$(br2)In addition, with the energies of the patterns occurring without me to guide them, any mishap will cause the remaining actions to become too unstable and immediately unravel.",
      "meta.for_each.1": "Remove a list of patterns and a list from the stack, then cast the given pattern over each element of the second list.",
      "meta.for_each.2": "More specifically, for each element in the second list, it will:$(li)Create a new stack, with everything on the current stack plus that element$(li)Draw all the patterns in the first list$(li)Save all the iotas remaining on the stack to a list$(br)Then, after all is said and done, pushes the list of saved iotas onto the main stack.$(br2)No wonder all the practitioners of this art go mad.",
      "meta.halt.1": "This pattern forcibly halts a _Hex. This is mostly useless on its own, as I could simply just stop writing patterns, or put down my staff.",
      "meta.halt.2": "But when combined with $(l:patterns/meta#hexcasting:eval)$(action)Hermes'/$ or $(l:patterns/meta#hexcasting:for_each)$(action)Thoth's Gambits/$, it becomes $(italics)far/$ more interesting. Those patterns serve to 'contain' that halting, and rather than ending the entire _Hex, those gambits end instead. This can be used to cause $(l:patterns/meta#hexcasting:for_each)$(action)Thoth's Gambit/$ not to operate on every iota it's given. An escape from the madness, as it were.",
      
      
      "circle_patterns.disclaimer": "These patterns must be cast from a $(l:greatwork/spellcircles)$(item)Spell Circle/$; trying to cast them through a $(l:items/staff)$(item)Staff/$ will fail rather spectacularly.",
      "circle_patterns.circle/impetus_pos": "Returns the position of the $(l:greatwork/impetus)$(item)Impetus/$ of this spell circle.",
      "circle_patterns.circle/impetus_dir": "Returns the direction the $(l:greatwork/impetus)$(item)Impetus/$ of this spell circle is facing as a unit vector.",
      "circle_patterns.circle/bounds/min": "Returns the position of the lower-north-west corner of the bounds of this spell circle.",
      "circle_patterns.circle/bounds/max": "Returns the position of the upper-south-east corner of the bounds of this spell circle.",
      
      
      "akashic_patterns.akashic/read": "Read the iota associated with the given pattern out of the $(l:greatwork/akashiclib)$(item)Akashic Library/$ with its $(l:greatwork/akashiclib)$(item)Record/$ at the given position. This has no range limit. Costs about one $(l:items/amethyst)$(item)Amethyst Dust/$.",
      "akashic_patterns.akashic/write": "Associate the iota with the given pattern in the $(l:greatwork/akashiclib)$(item)Akashic Library/$ with its $(l:greatwork/akashiclib)$(item)Record/$ at the given position. This $(italic)does/$ have a range limit. Costs about one $(l:items/amethyst)$(item)Amethyst Dust/$.",
      
      "_comment": "Normal Spells",
      
      
      "itempicking.1": "Certain spells, such as $(l:patterns/spells/blockworks#hexcasting:place_block)$(action)Place Block/$, will consume additional items from my inventory. When this happens, the spell will first look for the item to use, and then draw from all such items in my inventory.$(br2)This process is called \"picking an item.\"",
      "itempicking.2": "More specifically:$(li)First, the spell will search for the first valid item in my hotbar to the $(italic)right of my $(l:items/staff)$(item)staff/$, wrapping around at the right-hand side, and starting at the first slot if my $(l:items/staff)$(item)staff/$ is in my off-hand.$(li)Second, the spell will draw that item from as $(italic)far back in my inventory/$ as possible, prioritizing the main inventory over the hotbar.",
      "itempicking.3": "This way, I can keep a \"chooser\" item on my hotbar to tell the spell what to use, and fill the rest of my inventory with that item to keep the spell well-stocked.",
      
      
      "basic_spell.explode.1": "Remove a number and vector from the stack, then create an explosion at the given location with the given power.",
      "basic_spell.explode.2": "A power of 3 is about as much as a Creeper's blast; 4 is about as much as a TNT blast. Nature refuses to give me a blast of more than 10 power, though.$(br2)Strangely, this explosion doesn't seem to harm me. Perhaps it's because $(italic)I/$ am the one exploding?$(br2)Costs a negligible amount at power 0, plus 3 extra $(l:items/amethyst)$(item)Amethyst Dust/$ per point of explosion power.",
      "basic_spell.explode.fire.1": "Remove a number and vector from the stack, then create a fiery explosion at the given location with the given power.",
      "basic_spell.explode.fire.2": "Costs one $(l:items/amethyst)$(item)Amethyst Dust/$, plus about 3 extra $(l:items/amethyst)$(item)Amethyst Dust/$s per point of explosion power. Otherwise, the same as $(l:patterns/spells/basic#hexcasting:explode)$(action)Explosion/$, except with fire.",
      "basic_spell.add_motion": "Remove an entity and direction from the stack, then give a shove to the given entity in the given direction. The strength of the impulse is determined by the length of the vector.$(br)Costs units of $(l:items/amethyst)$(item)Amethyst Dust/$ equal to the square of the length of the vector, plus one for every Impulse except the first targeting an entity.",
      "basic_spell.blink": "Remove an entity and length from the stack, then teleport the given entity along its look vector by the given length.$(br)Costs about one $(l:items/amethyst)$(item)Amethyst Shard/$ per two blocks travelled.",
      "basic_spell.beep.1": "Remove a vector and two numbers from the stack. Plays an $(thing)instrument/$ defined by the first number at the given location, with a $(thing)note/$ defined by the second number. Costs a negligible amount of _media.",
      "basic_spell.beep.2": "There appear to be 16 different $(thing)instruments/$ and 25 different $(thing)notes/$. Both are indexed by zero.$(br2)These seem to be the same instruments I can produce with a $(item)Note Block/$, though the reason for each instrument's number being what it is eludes me.$(br2)Either way, I can find the numbers I need to use by inspecting a $(item)Note Block/$ through a $(l:items/lens)$(item)Scrying Lens/$.",
      
      
      "blockworks.place_block": "Remove a location from the stack, then pick a block item and place it at the given location.$(br)Costs a negligible amount of _media.",
      "blockworks.break_block": "Remove a location from the stack, then break the block at the given location. This spell can break nearly anything a Diamond Pickaxe can break.$(br)Costs about an eighth of one $(l:items/amethyst)$(item)Amethyst Dust/$.",
      "blockworks.create_water": "Summon a block of water (or insert up to a bucket's worth) into a block at the given position. Costs about one $(l:items/amethyst)$(item)Amethyst Dust/$.",
      "blockworks.destroy_water": "Drains either a liquid container at, or a body of liquid around, the given position. Costs about two $(l:items/amethyst)$(item)Charged Amethyst/$.",
      "blockworks.conjure_block": "Conjure an ethereal, but solid, block that sparkles with my pigment at the given position. Costs about one $(l:items/amethyst)$(item)Amethyst Dust/$.",
      "blockworks.conjure_light": "Conjure a magical light that softly glows with my pigment at the given position. Costs about one $(l:items/amethyst)$(item)Amethyst Dust/$.",
      "blockworks.bonemeal": "Encourage a plant or sapling at the target position to grow, as if $(item)Bonemeal/$ was applied. Costs a bit more than one $(l:items/amethyst)$(item)Amethyst Dust/$.",
      "blockworks.edify": "Forcibly infuse _media into the sapling at the target position, causing it to grow into an $(l:items/edified)$(thing)Edified Tree/$. Costs about one $(l:items/amethyst)$(item)Charged Amethyst/$.",
      "blockworks.ignite": "Start a fire on top of the given location, as if a $(item)Fire Charge/$ was applied. Costs about one $(l:items/amethyst)$(item)Amethyst Dust/$.",
      "blockworks.extinguish": "Extinguish blocks in a large area. Costs about six $(l:items/amethyst)$(item)Amethyst Dust/$.",
      
      
      "nadirs.1": "This family of spells all impart a negative potion effect upon an entity. They all take an entity, the recipient, and one or two numbers, the first being the duration and the second, if present, being the potency (starting at 1).$(br2)Each one has a \"base cost;\" the actual cost is equal to that base cost, multiplied by the potency squared.",
      "nadirs.2": "According to certain legends, these spells and their sisters, the $(l:patterns/great_spells/zeniths)$(action)Zeniths/$, were \"[...] inspired by a world near to this one, where powerful wizards would gather magic from the land and hold duels to the death. Unfortunately, much was lost in translation...\"$(br2)Perhaps that is the reason for their peculiar names.",
      "nadirs.potion/weakness": "Inflicts $(thing)weakness/$. Base cost is one $(l:items/amethyst)$(item)Amethyst Dust/$ per 10 seconds.",
      "nadirs.potion/levitation": "Inflicts $(thing)levitation/$. Base cost is one $(l:items/amethyst)$(item)Amethyst Dust/$ per 5 seconds.",
      "nadirs.potion/wither": "Inflicts $(thing)withering/$. Base cost is one $(l:items/amethyst)$(item)Amethyst Dust/$ per second.",
      "nadirs.potion/poison": "Inflicts $(thing)poison/$. Base cost is one $(l:items/amethyst)$(item)Amethyst Dust/$ per 3 seconds.",
      "nadirs.potion/slowness": "Inflicts $(thing)slowness/$. Base cost is one $(l:items/amethyst)$(item)Amethyst Dust/$ per 5 seconds.",
      
      
      "hexcasting_spell.basics": "These three spells each create an $(l:items/hexcasting)$(thing)item that casts a _Hex./$$(br)They all require me to hold the empty item in my off-hand, and require two things: the list of patterns to be cast, and an entity representing a dropped stack of $(l:items/amethyst)$(item)Amethyst/$ to form the item's battery.$(br2)See $(l:items/hexcasting)this entry/$ for more information.",
      "hexcasting_spell.craft/cypher": "Costs about one $(l:items/amethyst)$(item)Charged Amethyst/$.",
      "hexcasting_spell.craft/trinket": "Costs about five $(l:items/amethyst)$(item)Charged Amethysts/$.",
      "hexcasting_spell.craft/artifact": "Costs about ten $(l:items/amethyst)$(item)Charged Amethysts/$.",
      "hexcasting_spell.recharge.1": "Recharge a _media-containing item in my other hand. Costs about one $(l:items/amethyst)$(item)Amethyst Shard/$.",
      "hexcasting_spell.recharge.2": "This spell is cast in a similar method to the crafting spells; an entity representing a dropped stack of $(l:items/amethyst)$(item)Amethyst/$ is provided, and recharges the _media battery of the item in my other hand.$(br2)This spell $(italic)cannot/$ recharge the item farther than its original battery size.",
      "hexcasting_spell.erase.1": "Clear a _Hex-containing item in my other hand. Costs about one $(l:items/amethyst)$(item)Amethyst Dust/$.",
      "hexcasting_spell.erase.2": "The spell will also void all the _media stored inside the item, releasing it back to Nature and returning the item to a perfectly clean slate. This way, I can re-use $(l:items/hexcasting)$(item)Trinkets/$ I have put an erroneous spell into, for example.$(br2)This also works to clear a $(l:items/focus)$(item)Focus/$ or $(l:items/spellbook)$(item)Spellbook/$ page, unsealing them in the process.",
      
      
      "sentinels.1": "$(italic)Hence, away! Now all is well,$(br)One aloof stand sentinel./$$(br2)A $(l:patterns/spells/sentinels)$(thing)Sentinel/$ is a mysterious force I can summon to assist in the casting of _Hexes, like a familiar or guardian spirit. It appears as a spinning geometric shape to my eyes, but is invisible to everyone else.",
      "sentinels.2": "It has several interesting properties:$(li)It does not appear to be tangible; no one can touch it.$(li)Only my _Hexes can interact with it.$(li)Once summoned, it stays in place until banished.$(li)I am always able to see it if I'm close enough, even through solid objects.",
      "sentinels.sentinel/create": "Summons my $(l:patterns/spells/sentinels)$(thing)sentinel/$ at the given position. Costs about one $(l:items/amethyst)$(item)Amethyst Dust/$.",
      "sentinels.sentinel/destroy": "Banish my $(l:patterns/spells/sentinels)$(thing)sentinel/$, and remove it from the world. Costs a negligible amount of _media.",
      "sentinels.sentinel/get_pos": "Add the position of my $(l:patterns/spells/sentinels)$(thing)sentinel/$ to the stack, or $(l:casting/influences)$(thing)Null/$ if it isn't summoned. Costs a negligible amount of _media.",
      "sentinels.sentinel/wayfind": "Transform the position vector on the top of the stack into a unit vector pointing from that position to my $(l:patterns/spells/sentinels)$(thing)sentinel/$, or $(l:casting/influences)$(thing)Null/$ if it isn't summoned. Costs a negligible amount of _media.",
      
      "colorize": "I must be holding a $(l:items/pigments)$(item)Pigment/$ in my other hand to cast this spell. When I do, it will consume the dye and permanently change my mind's coloration (at least, until I cast the spell again). Costs about one $(l:items/amethyst)$(item)Amethyst Dust/$.",
      
      
      "flights.1": "Although it seems that true, limitless flight is out of my grasp, I have nonetheless found some methods of holding one in the sky, each with their respective drawbacks.$(br2)All forms produce a shimmer of excess _media; as the spell gets closer to ending, the sparks are shot through with more red and black.",
      "flights.2": "Other forms of flight do exist, of course. For example, a combination of $(l:patterns/spells/basic#hexcasting:add_motion)$(action)Impulse/$ and $(l:patterns/spells/nadirs#hexcasting:potion/levitation)$(action)Blue Sun's Nadir/$ has been used since antiquity for a flight of sorts.$(br2)I've also heard tell of a thin membrane worn on the back that allows the ability to glide. From my research, I believe the Great spell $(l:patterns/great_spells/altiora)$(action)Altiora/$ may be used to mimic it.",
      "flights.range.1": "A flight limited in its range.",
      "flights.range.2": "The second argument is a horizontal radius, in meters, in which the spell is stable. Moving outside of that radius will end the spell, dropping me out of the sky. As long as I stay inside the safe zone, however, the spell lasts indefinitely. An additional shimmer of _media marks the origin point of the safe zone. $(br2)Costs about 1 $(l:items/amethyst)$(item)Amethyst Dust/$ per meter of safety.",
      "flights.time.1": "A flight limited in its duration.",
      "flights.time.2": "The second argument is an amount of time in seconds for which the spell is stable. After that time, the spell ends and I am dropped from the sky. $(br2)It is relatively expensive at about 1 $(l:items/amethyst)$(item)Charged Crystal/$ per second of flight; I believe it is best suited for travel.",
      
      "create_lava.1": "Summon a block of lava (or insert up to a bucket's worth) into a block at the given position. Costs about one $(l:items/amethyst)$(item)Charged Amethyst/$.",
      "create_lava.2": "It may be advisable to keep my knowledge of this spell secret. A certain faction of botanists get... touchy about it, or so I've heard.$(br2)Well, no one said tracing the deep secrets of the universe was going to be an easy time.",
      
      
      "weather_manip.lightning": "I command the heavens! This spell will summon a bolt of lightning to strike the earth where I direct it. Costs about three $(l:items/amethyst)$(item)Amethyst Shards/$.",
      "weather_manip.summon_rain": "I control the clouds! This spell will summon rain across the world I cast it upon. Costs about one $(l:items/amethyst)$(item)Charged Amethyst/$. Does nothing if it is already raining.",
      "weather_manip.dispel_rain": "A counterpart to summoning rain. This spell will dispel rain across the world I cast it upon. Costs about one $(l:items/amethyst)$(item)Amethyst Shard/$. Does nothing if the skies are already clear.",
      
      "altiora.1": "Summon a sheaf of _media about me in the shape of wings, endowed with enough substance to allow gliding.",
      "altiora.2": "Using them is identical to using $(item)Elytra/$; the target (which must be a player) is lofted into the air, after which pressing $(k:jump) will deploy the wings. The wings are fragile, and break upon touching any surface. Longer flights may benefit from $(l:patterns/spells/basic#hexcasting:add_motion)$(action)Impulse/$ or (for the foolhardy) $(item)Fireworks/$.$(br2)Costs about one $(l:items/amethyst)$(item)Charged Crystal/$.",
      
      "teleport.1": "Far more powerful than $(l:patterns/spells/basic#hexcasting:blink)$(action)Blink/$, this spell lets me teleport nearly anywhere in the entire world! There does seem to be a limit, but it is $(italic)much/$ greater than the normal radius of influence I am used to.",
      "teleport.2": "The entity will be teleported by the given vector, which is an offset from its given position. No matter the distance, it always seems to cost about ten $(l:items/amethyst)$(item)Charged Amethyst/$.$(br2)The transference is not perfect, and it seems when teleporting something as complex as a player, their inventory doesn't $(italic)quite/$ stay attached, and tends to splatter everywhere at the destination. In addition, the target will be forcibly removed from anything inanimate they are riding or sitting on ... but I've read scraps that suggest animals can come along for the ride, so to speak.",
      
      
      "zeniths.1": "This family of spells all impart a positive potion effect upon an entity, similar to the $(l:patterns/spells/nadirs)$(action)Nadirs/$. However, these have their _media costs increase with the $(italic)cube/$ of the potency.",
      "zeniths.potion/regeneration": "Bestows $(thing)regeneration/$. Base cost is one $(l:items/amethyst)$(item)Amethyst Dust/$ per second.",
      "zeniths.potion/night_vision": "Bestows $(thing)night vision/$. Base cost is one $(l:items/amethyst)$(item)Amethyst Dust/$ per 5 seconds.",
      "zeniths.potion/absorption": "Bestows $(thing)absorption/$. Base cost is one $(l:items/amethyst)$(item)Amethyst Dust/$ per second.",
      "zeniths.potion/haste": "Bestows $(thing)haste/$. Base cost is one $(l:items/amethyst)$(item)Amethyst Dust/$ per 3 seconds.",
      "zeniths.potion/strength": "Bestows $(thing)strength/$. Base cost is one $(l:items/amethyst)$(item)Amethyst Dust/$ per 3 seconds.",
      
      "greater_sentinel.1": "Summon a greater version of my $(l:patterns/spells/sentinels)$(thing)Sentinel/$. Costs about two $(l:items/amethyst)$(item)Amethyst Dust/$.",
      "greater_sentinel.2": "The stronger $(l:patterns/spells/sentinels)$(thing)sentinel/$ acts like the normal one I can summon without the use of a Great Spell, if a little more visually interesting. However, the range in which my spells can work is extended to a small region around my greater $(l:patterns/spells/sentinels)$(thing)sentinel/$, about 16 blocks. In other words, no matter where in the world I am, I can interact with things around my $(l:patterns/spells/sentinels)$(thing)sentinel/$ (the mysterious forces of chunkloading notwithstanding).",
      
      "make_battery.1": "Infuse a bottle with _media to form a $(l:items/phials)$(item)Phial./$",
      "make_battery.2": "Similarly to the spells for $(l:patterns/spells/hexcasting)$(action)Crafting Casting Items/$, I must hold a $(item)Glass Bottle/$ in my other hand, and provide the spell with a dropped stack of $(l:items/amethyst)$(item)Amethyst/$. See $(l:items/phials)this page/$ for more information.$(br2)Costs about one $(l:items/amethyst)$(item)Charged Amethyst/$.",
      
      "brainsweep_spell.1": "I cannot make heads or tails of this spell... To be honest, I'm not sure I want to know what it does.",
      
      
      
      
      
      "lore.terabithia1.1": "$(italic)Full title: Letter from Cardamom Steles to Her Father, #1/$$(br2)Dear Papa,$(br)Every day it seems I have more reason to thank you for saving up to send me to the Grand Library. The amount I am learning is incredible! I feel I don't have the skill with words needed to express myself fully... it is wonderful to be here.",
      "lore.terabithia1.2": "I sit in the main dome as I write this. It's maintained by the Hexcasting Corps; they have some sort of peculiar mechanism at the top that captures the stray thought energy as it leaks out from the desks and desks of hard-working students, as I understand it. One of my friends in the dormitory, Amanita, is studying the subject, and oh how she loves to explain it to me at length, although I confess I do not understand it very well.",
      "lore.terabithia1.3": "The way I understand it, our processes of thought--the intangible mechanisms by which I move my pen and by which you read this letter--are not completely efficient. A small amount of that energy is released into the environment, like how a wagon's axle is hot to the touch after it has been turning for a while. This spare energy is called \"media.\" One person's spare media is trifiling, but the hundreds of thinking people in the main dome have a sort of multiplicative effect, and combined with some sort of ingenious mechanism, it can be solidified into a sort of purple crystal.",
      "lore.terabithia1.4": "But that's enough about her studies. I returned from my first expedition with the Geology Corps today! My apologies for not sending a letter before I left; the date crept up on me. We ventured into a crack in the earth to the east of the Grand and spent the night camping under the rock and soil. We kept to well-lit and well-traveled areas of the cave, of course, and in all honesty it was likely safer in there than the night surface, but oh how I was scared!",
      "lore.terabithia1.5": "Fortunately the night passed without mishap, and we proceeded deeper into the cave for our examination of the local veins of ore. We were looking for trace veins of a purple crystal called \"amethyst,\" which supposedly occurs in small amounts deep in the rock. We did not find anything, sadly, and returned to the sunlit surface empty-handed.",
      "lore.terabithia1.6": "Come to think of it, the description of this \"amethyst\" I now realize closely matches those crystals of media Amanita speaks of. Imagine if these nuggets of thought occurred naturally under the ground! I can't imagine why that might happen, though... ",
      "lore.terabithia1.7": "As a student, I am entitled to send one letter by Akashic post every three months, free of charge. Unfortunately, you know how thin my moneybags are ... so I am afraid this offer is the only method I may communicate with you. I will of course appreciate immensely if you manage to scrounge together the money to send a letter back, but it seems our communications may be limited. I hate to be cut off from you so, but the skills I gain here will be more than repayment. Imagine, I will be the first member of our family to be anything other than a farmer!",
      "lore.terabithia1.8": "So, I suppose I will write again in three months' time.$(br2)Yours,$(br)-- Cardamom Steles",
      
      
      "lore.terabithia2.1": "$(italic)Full title: Letter from Cardamom Steles to Her Father, #2/$$(br2)Dear Papa,$(br)... Goodness, what an ordeal it is to try to summarize the last three months into a short letter. Such a cruel task set before me by this miracle I receive entirely for free! Woe is me.",
      "lore.terabithia2.2": "My studies with the Geology Corps have been progressing smoothly. We have gone on more expeditions, deeper into the earth, to where the smooth gray stone makes way to a hard, flaky slate. It creates such an awful, choking dust under your feet... it's incredible what hostility there is below all of our feet all the time, even disregarding the creatures of the dark. (I have had one or two encounters with them, but I know how you shudder to think of me having to fight for my life, so I will not write of them.)",
      "lore.terabithia2.3": "We did manage to find some of this amethyst, however. There was a small vein with a few trace crystals on one of our expeditions. We were under strict instructions to keep none of them and turn them in to our Corps prefect immediately. I find the whole affair rather ridiculous; they treat it like some matter of enormous importance and secrecy, and yet have a group of a dozen students, all barely six months at the Grand Library, trying to excavate barely ten drams of the stuff with twelve prospector's picks in a square foot...",
      "lore.terabithia2.4": "I cannot imagine for what purpose, either. A librarian pointed me to an encyclopedia of gems, and amethyst seems to have next to no purpose; it's used for certain specialty types of glass and lenses, of all things.$(br2)If I were to speculate, I would guess that these amethyst crystals and the media they so resemble are one and the same, as I wrote of last time.",
      "lore.terabithia2.5": "If this is true, the secrecy, not to mention the prefect's aversion to questioning, may be because this is an original piece of research the Grand Library is not eager to let into the hands of enemy factions.$(br2)However, this theory does not sit quite right with me. The amethyst I handled in the cave and the crystals of media Amanita has shown to me do seem quite similar, but not identical. I would like to see them side-by-side to be sure, but media has a peculiar buzzing or rumbling feel beneath the fingers that amethyst does not.",
      "lore.terabithia2.6": "It is quite possible I was unable to sense it on the amethyst in the cave due to the stress of being undergound-- my hands were shaking the one time I managed to touch some, and the feeling is very light --but it does not seem the same to me. The light reflects slightly differently.$(br2)I suppose if I ever manage to get my hands on a crystal of amethyst outside of a cave, I will ask Amanita to see if she can cast a spell with it. Every time we meet she seems to have some new fantastic trick.",
      "lore.terabithia2.7": "Just last week she suspended me in the air supported by nothing at all! It is an immensely strange feeling to have your body tingling and lighter than air with your clothing still the same weight... I am just glad she tugged me over my bed before the effect ran out.$(br2)Yours,$(br)-- Cardamom Steles",
      
      
      "lore.terabithia3.1": "$(italic)Full title: Letter from Cardamom Steles to her father, #3, part 1/2/$$(br2)Dear Papa,$(br)Two very peculiar things have happened since I last wrote.$(br2)Firstly, the professor in charge of the entry-level Hexcasting Corps students has disappeared. Nobody knows where he has gone. His office and living quarters were found locked, but still in their usual state of disarray.",
      "lore.terabithia3.2": "Even more peculiarly, any attempts by the students of the Grand to rouse the administrative portions of the gnarled bureaucracy have been very firmly rejected. Even other professors seem reluctant to talk about him.$(br2)As you might imagine, Amanita is sorely distressed. Whatever replacement professors the Grand managed to dredge up have none of the old professor's tact or skill with beginners.",
      "lore.terabithia3.3": "But amazingly, that is not the stranger of the two things I have to tell you. The most horrendous thing I hope to ever experience happened on another trip out with the Geology Corps. This time, we were due for an expedition near a village.",
      "lore.terabithia3.4": "Usually when we do such a thing, there is a long process of communication with the mayor or elder of the village to ensure we have permission and establish boundaries on where we are allowed to go and what we are allowed to do. But on this expedition, there was very little of that; we were notified where we were going by a prefect of the Hexcasting Corps scarcely two days before we left.",
      "lore.terabithia3.5": "We camped near the village, but in a thick forest, even though the nearby plains would have been much more hospitable. We could barely see the village from where we pitched our tents. As I laid down my bedroll the evening we arrived, the peculiar silence troubled me. Even if we couldn't see the village, we should have been able to hear it. But the whole time we were above-ground, there was next to no sound.",
      "lore.terabithia3.6": "The few things I did hear all sounded like work: the peal of hammers on anvils and the scrape of hoe on dirt, for example. I never heard a shred of conversation.$(br2)The next morning we readied our lanterns and descended into the earth.",
      "lore.terabithia3.7": "We weren't told exactly what it was we were spelunking for, but one of the other students had overheard we were looking for more amethyst, which seemed reasonable enough. I had my eyes trained for any specks of purple I might find in the cave walls, but just as the gray stone was making way to black slate, an incredible sight unfolded before me.$(br2)It was an entire chamber made of amethyst, nearly ten times as tall as I am. The inside seemed to glow with purple sparks and lanternlight glint, every surface covered with jagged crystal. There was more amethyst here than our entire group had ever excavated since I came to the Grand.",
      "lore.terabithia3.8": "Gloves were distributed and we were told to get to mining. One of the prefects along with us had a peculiar lavender box I've seen some of the higher-ups in the Grand using for storage, and the other students and I dutifully got to shattering the glassy crystals off the walls of the cave and putting them in the box. Under the outer layers of brittle crystal there seemed to be two types of denser growth. One of them seemed of similar composition to the loose crystal, but one seemed more ... I struggle to find the word.",
      "lore.terabithia3.9": "I hesitate to say \"important,\" but that's the best I can think of. It had a certain ... gravitas, like the dark, sunken X in its surface held some sacred meaning. Whatever the reason we were under strict instructions not to touch them. Occasionally a misplaced pickaxe would shatter one, and the student responsible would get quite the earful. Although the labor was hard and took most of my attention, I couldn't help but notice how ... lucid I felt. It was a strange mix of feelings: I felt incredibly clear-headed, but I also felt if I stopped to examine the feeling I might never stop.",
      "lore.terabithia3.10": "It was like each breath in erected a friendly signpost in my head promising the way forward, pointing directly down a steep cliff. I shook my head and immersed myself in the work of mining, which seemed to stave off the signposts.$(br2)I did manage, however, to hide a shard of the crystal in my knapsack.$(br2)We spent nearly the whole day mining, excavating most of the crystal by the time the prefects' chronometer said the sun would set soon.",
      "lore.terabithia3.11": "As we left, I couldn't help but notice that on the surfaces of those dark, scored places we left unmined, there seemed to be the faintest buds of new crystal, like they were somehow growing out of them. Everything I had learned about the geology of crystals said they took thousands of years to grow, but here there was new growth in less than a day. I suppose the prefects' warnings against breaking those spots were warranted, at least.",
      "lore.terabithia3.12": "Our journey back to the surface was uneventful, and we got back to our tents just as the sun was setting-- My apologies, I am nearly out of paper for this letter. There's only so much you can write on one Akashic letter ... This tale is worth purchasing another letter for. I'll send them both at once, so they should arrive together.$(br2)Yours,$(br)-- Cardamom Steles",
      
      
      "lore.terabithia4.1": "$(italic)Full title: Letter from Cardamom Steles to her father, #3, part 2/2/$$(br2)Dear Papa,$(br)As I was saying, I was running out of paper to write my story, so the rest of it is in this letter. We made it back to camp just as the sun was setting. And that night was the most horrible event of the whole strange outing.",
      "lore.terabithia4.2": "I had gotten up in the middle of the night to relieve myself. The moon was covered with clouds, and I confess I got lost in the winds of the forest and could not find the way back to the camp. Fearing the monsters of the night, I decided I would find my way to the village and see if I could find a bed there. At the least, I would be protected there.",
      "lore.terabithia4.3": "The village was easy enough to find, though there was very little sound. Even this late at night I would expect the inn to be, if not bustling, at least not silent. But peeking through the inn door I saw absolutely nobody.$(br2)I knocked on the door of one of the houses to no response. The next two houses, too, seemed completely empty.",
      "lore.terabithia4.4": "My pulse started to rise, and I resolved to enter the next house. I figured whoever might be inside would be understanding of their rest being disturbed. At the least, hearing another voice would have been reassuring, even if they didn't let me stay the night under their roof.$(br2)The house was very small, barely more than a cartographer's table and a bed. I could see there was someone in the bed, and I tried to reassure myself that everyone in the village was just deeply asleep as I turned to leave.",
      "lore.terabithia4.5": "But then the clouds shifted, and moonlight glinted across the bed's occupant.$(br2)I screamed, and its eyes snapped open. It was ... distinctly, horrendously not human. It was like some awful de-evolution of a man, its forehead too high, its body stocky and dense. I believe it is appropriate to say \"it,\" at least; the thing before me was obviously not as wise as a human, despite how it resembled us.",
      "lore.terabithia4.6": "Its eyes trained on me-- oh, its eyes were awful, dull and unintelligent like a sheep's! It opened its mouth but a pained mockery of speech poured out, a shuddering, nasal groan.",
      "lore.terabithia4.7": "I ran. In the light of the newly-revealed moon I caught glimpses of other townspeople through windows, and they were all warped and simplified as the first $(italic)thing/$ I had seen. I sprinted into the darkness of the forest, away from those terrible, terrible animal eyes in those distorted faces.$(br2)The camp was easier to find now that I could see in the moonlight. No-one seemed to have noticed my prolonged absence, thankfully. I crawled back into my bedroll and did my very best to forget the whole night.",
      "lore.terabithia4.8": "As you can tell from this letter, I did not do a very good job. That warped visage still haunts my dreams. I shudder to think that it once might have been human.$(br2)After we got back to the Grand I showed the shard of crystal I had smuggled out to Amanita. She confirmed my suspicions: it is definitely a crystal of media. What an enormous geode full of it is doing underground, though, is beyond her.",
      "lore.terabithia4.9": "She also mentioned something interesting: apparently media can be used in a similar way to true amethyst in those niche glasses I mentioned a few letters ago. The physical manner in which they both crystallise happens to be nearly identical, and it has nothing to do with media's magical properties, or so she says.$(br2)I chose not to tell her of the village full of monsters.",
      "lore.terabithia4.10": "I know how tight money is for you, and how expensive it is to send a letter all the way back to the Grand, but I beg of you, please send a word of advice back. I am greatly distraught, and reading your words would do me much good.$(br2)Yours,$(br)-- Cardamom Steles",
      
      
      "lore.terabithia5.1": "$(italic)Full title: Letter from Cardamom Steles to her father, #4/$$(br2)Amanita has disappeared.$(br2)I don't know where she has gone, Papa. The last I saw her was over dinner, and she had just spoken to someone about the disappearances, and then--",
      "lore.terabithia5.2": "then-- then she was gone too. And no one speaks of her, and I am so so scared, Papa, do they all know? Everyone must have a friend who's just $(italic)vanished/$, into thin air, into non-being.$(br2)Where did they $(italic)go/$?",
      "lore.terabithia5.3": "They keep shutting things down, too-- we haven't been on a trip for the Geology Corps in weeks, all the apparati that collect media in the main dome are gone, the Apothecary Corps haven't been open for months... it's like termites are eating the Grand from the inside, leaving a hollow shell.$(br2)I think they've started scanning the letters, we write too...",
      "lore.terabithia5.4": "This letter has taken so much courage to write, and I don't have the courage to tell people myself, but if no one here can hold the knowledge I hope and pray you can send the word out... it's a vain hope for this to spread from somewhere as backwater as Brackenfalls, but please, please, do your best. Remember them, Papa... Amanita Libera, Jasmine Ward, Theodore Cha... please, remember them... and please forgive my cowardice, that I foist the responsibility onto you.",
      "lore.terabithia5.5": "i can no longer write, my hands shake so much, please, rescue us.",
      
      
      "lore.inventory.1": "Cell 39, Restoration Log #72, Detainment Center Beta$(br2)Prisoner Name: Raphael Barr$(br)Crime: Knowledge of Project Wooleye$(br)Reason for Cell Vacancy: Death$(br)Additional notes: The following letter was scrawled over most of the wall space.",
      "lore.inventory.2": "I see hexagons when I close my eyes.$(br2)The patterns, they invade the space between my eyes and my eyelids, my mind, my dreams. I sparkle in and out of lucidity, like a crystal dangling from a string, sometimes catching the light, sometimes consumed by it.",
      "lore.inventory.3": "I am more lucid today. Maybe. I cannot tell anymore. I cannot even say I am tired anymore; at some point the constant companion of exhaustion left me, even as something else came to prick at my eyes. I can't sense the fatigue. But it's there.$(br2)My bones are fragile. My joints are rough and sharp.",
      "lore.inventory.4": "Sometimes why I am here comes back to me. I remember being too loud about something I knew ... I remember a very bright room where I was told things. I remember my thoughts freezing into glass, shattered, melted and recrystallized over and over and over and over and over with a purpose behind them to make me forget worse than that to keep me alive while killing me, my self, the iota of ME being meaningless because there would be no observer just a body but I tricked them I did it somehow",
      "lore.inventory.5": "they thought they broke me beyond the point of pulling the wool over my eyes but i was awake enough and am awake enough to feel PAIN$(br2)I do not sleep but when i wake up I cannot rub the crust off of my eyes because it would cut my skin and I do not want to see the purple glints inside",
      "lore.inventory.6": "They do not kill me, because my husband has my focus, and he would know if I died. But he is no Hexcaster and could not find me with his mediocre skill. i am out of ambit$(br2)it  h urts to think. quite literally. the thoughts are so wasteful now the leftover striates directly onto the million microcrystals",
      "lore.inventory.7": "i remember the doctors in the bright room forcing me to inhale something like sand but sharper and it hurt so much. At first just the physical pain of mucous membranes trying to absorb shatterglass but then they got their fingernails into my stimulus-response and they could do it with a word$(br2)i remember camping out and seeing the corps setting up their circle all around a village and the ground under my feet rumbling",
      "lore.inventory.8": "drift out of time. Sometimes I believe I see visions of the future, because they seem to make sense but cannot happen now because I know i will be here until forever because the white room men said so. i see myself toppling over and my skull cracking open into halves and inside will be spears of not-amethyst dripping with blood piercing the wrinkled three pounds of fat and meat dreaming that it is a butterfly",
      "lore.inventory.9": "i hope my students are alright. why do i think that? waste. they told me i'm a waste, they couldn't be content with destroying me they had to make me feel like I deserved it the whole time, too. No sticks or stones to break my bones, just words to hurt me. if they released me no one would believe me because my body is inspectable fully i just look like one more addicted to overcasting$(br2)But they locked me up insted and i dont know if it's a mercy",
      "lore.inventory.10": "with all the media around I tried many times to cast a hex and get me out or at the least snuff out my suffering but the patterns that march through the fields of my mind snicker and dissolve when I try to reach for them. i think i remember being forced to forget them, I remember grand structures of knowledge interlinked getting chipped away and splintering as it fell apart under the weight of forced ignorance but it hurts so much to try to remember forgetting what you remembered you thought you knew",
      "lore.inventory.11": "maybe I am just in the late late late late stages of overcasting dependency, the patterns papercutting into the space between my eyes and my eyelids I have heard of, the purple edges of my nerves i have heard of. is there any point trying to make myself believe what is true I am not being tortured. I deserve this. if i will never have anyone to discuss it with ever again why try",
      "lore.inventory.12": "they're going to kill everyone n the whole world aren't they the grand needs to eat just as much as i ... when did i lasst eat$(br2)everyone else has to eat and they cannot do that if all the farmers in the world are empty and all the knowledge of farming is underground or at least someone else is going to Find out and melt their smug faces to wax",
      "lore.inventory.13": "maybe wake up someday and wonder about all the thngs we left them and wonder why there are million miles of tunnels underground with no one smart enough to mine them$(br2)i can see them reading this . they ... will be too far gone to care",
      
      
      "lore.experiment1.1": "$(italic)I only managed to find these five entries from this log./$$(br2)Detonation #26$(li)Location: Carpenter's North$(li)Population: 174$(li)Nodes Formed: 3$(li)Node Distance from Epicenter: 55-80m vertical, 85-156m horizontal$(li)Media Generation: 1320 uθ/min",
      "lore.experiment1.2": "Detonation #27$(li)Location: Brackenfalls$(li)Population: 79$(li)Nodes Formed: 1$(li)Node Distance from Epicenter: 95m vertical, 67m horizontal$(li)Media Generation: 412 uθ/min",
      "lore.experiment1.3": "Detonation #28$(li)Location: Greyston$(li)Population: approx. 1000$(li)Nodes Formed: 18$(li)Node Distance from Epicenter: 47-110m vertical, 59-289m horizontal$(li)Media Generation: 8478 uθ/min",
      "lore.experiment1.4": "Detonation #29$(li)Location: Unnamed; village two days west of Greyston$(li)Population: 35$(li)Nodes Formed: 0$(li)Node Distance from Epicenter: N/A$(li)Media Generation: N/A$(br2)Note: inhabitants still affected in the normal way",
      "lore.experiment1.5": "Detonation #30$(li)Location: Boiling Brook$(li)Population: 231$(li)Nodes Formed: 4$(li)Node Distance from Epicenter: 61-89m vertical, 78-191m horizontal$(li)Media Generation: 1862 uθ/min",
      "lore.experiment1.6": "Conclusion: approx 60 needed for one node. Too few consumes them but does not provide enough energy for node formation. Little correlation between input count and breadth/depth.$(br2)Effects on inhabitants still consistently more severe than with single-target testing, especially the physical effects.",
      
      
      "lore.experiment2.1": "$(italic)These documents were heavily redacted. I have copied the readable text from them here./$$(br2)Subject #1 \"A.E.\"$(br)Stopped struggling immediately after procedure. Facial expression and limbs slack, but can stand unassisted. When left unattended, absently pantomimes actions commonly done in previous profession (groundskeeping).",
      "lore.experiment2.2": "Heartrate high immediately after procedure, but this is inconclusive due to state of fear immediately before. Resulting bud produced 35 uθ/min.$(br)...$(br)Subject #4 \"P.I.\"$(br)Psychological tests run on P.I. Subject has object permanence, spatial awareness, basic numerical reasoning. Difficulty learning new tasks. $(br2) ...",
      "lore.experiment2.3": "Subject #7 \"T.C.\"$(br)Similar results several hours after the procedure to other subjects: able to stand, perform simple tasks... $(br2)Subject #11 \"R.S.\"$(br)Sedated before procedure...$(br2) ...",
      "lore.experiment2.4": "Subject #23 \"A.L.\"$(br)Ability to speak retained to a greater degree than most subjects; dwindled to broken sentences, then a single word \"card\" over the course of several hours.$(br2)For further testing: how does the procedure affect previous Hexcasters vs. non-Hexcasters?$(br2) ...",
      
      
      
      "interop.1": "The art of _Hexcasting is versatile. If I find that my world has been $(italic)modified/$ by certain other powers, it's possible that I may use _Hexcasting in harmony and combination with them.",
      "interop.2": "I should keep in mind, however, that Nature seems to have paid less attention in crafting these aspects of my art; strange behavior and bugs are to be expected. I'm sure the mod developer will do her best to correct them, but I must remember this is a less important pastime to her.$(br2)I may also find that there are sharp disregards to balance in the costs and effects of the interoperating powers. In such a case I suppose I will have to be responsible and restrain myself from using them.",
      "interop.3": "Finally, if I find myself interested in the lore and stories of this world, I do not think any notes compiled while examining these interoperations should be considered as anything more than light trifles.",
      
      
      "interop.gravity.1": "I have discovered actions to get and set an entity's gravity. I find them interesting, if slightly nauseating.$(br2)Interestingly, although $(l:patterns/great_spells/flight)$(action)Flight/$ is a great spell, and manipulates gravity similarly, these are not. It baffles me why... Perhaps the mod developer wanted players to have fun, for once.",
      "interop.gravity.get": "Get the main direction gravity pulls the given entity in, as a unit vector. For most entities, this will be down, <0, -1, 0>.",
      "interop.gravity.set": "Set the main direction gravity pulls the given entity in. The given vector will be coerced into the nearest axis, as per $(l:patterns/math#hexcasting:coerce_axial)$(action)Axial Purification/$. Costs about one $(l:items/amethyst)$(item)Charged Amethyst/$.",
      
      
      "interop.pehkui.1": "I have discovered methods of changing the size of entities, and querying how much larger or smaller they are than normal.",
      "interop.pehkui.get": "Get the scale of the entity, as a proportion of their normal size. For most entities, this will be 1.",
      "interop.pehkui.set": "Set the scale of the entity, passing in a proportion of their normal size. Costs about 1 $(item)Amethyst Shard/$."
    }
  },
  
}
