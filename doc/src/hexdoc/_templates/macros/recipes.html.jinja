{# show the names of all the recipe results in a list of recipes #}
{% macro generic(recipes, result_attribute, description, separator) -%}
  <blockquote class="crafting-info">
    {{ description }} {{
      recipes
      |map(attribute="result."~result_attribute)
      |map("hexdoc_wrap", "code")
      |join(separator)
    }}.
  </blockquote>
{%- endmacro %}

{% macro render_item_texture(name, texture, is_first) -%}
  {% if texture.meta %}
    <div
      role="img"
      title="{{ name }}"
      aria-label="Animated image of {{ name }}"
      class="texture animated-sync {{ texture.class_name }} {{ 'multi-texture-active' if is_first }}"
    ></div>
  {% else %}
    <img
      title="{{ name }}"
      alt="Image of {{ name }}"
      src="{{ texture.url }}"
      loading="lazy"
      class="texture {{ 'multi-texture-active' if is_first }}"
    >
  {% endif %}
{%- endmacro %}

{# display a single item, with a badge if the count is greater than 1 #}
{% macro render_item(item, is_first=true, count=1) -%}
  {% if item.gaslighting %}
    <div class="multi-textures gaslight-textures {{ 'multi-texture-active' if is_first }}">
      {% for texture in item.textures %}
        {{ render_item_texture(item.name, texture, is_first=loop.first) }}
      {% endfor %}
    </div>
  {% else %}
    {{ render_item_texture(item.name, item.texture, is_first=is_first) }}
  {% endif %}
  {% if count > 1 %}
    <div class="badge">{{ count }}</div>
  {% endif %}
{%- endmacro %}

{# render a list of recipe ingredients #}
{% macro render_ingredients(ingredients, is_recursive=false) -%}
  {% for ingredient in ingredients %}
    {% if ingredient.type|string == "hexcasting:mod_conditional" %}
      {# recursion! what could possibly go wrong? #}
      {{ render_ingredients(ingredient.default, true) }}
    {% else %}
      {{ render_item(ingredient.item, is_first=loop.first and not is_recursive) }}
    {% endif %}
  {% endfor %}
{%- endmacro %}

{# render a crafting table for each recipe #}
{% macro crafting_table(recipes) -%}
  <details class="details-collapsible crafting-table-details">
    <summary class="collapse-details">
      <span class="collapse-recipe-show">{{ _('hexdoc.recipe.show') }}</span>
      <span class="collapse-recipe-hide">{{ _('hexdoc.recipe.hide') }}</span>
    </summary>
    <div class="crafting-tables">
      {% for recipe in recipes %}
        <div>
          <h5>{{ recipe.result.item.name }}</h5>
          <div class="crafting-table">
            <img
              alt="Crafting table"
              src="{{ 'hexcasting:textures/gui/hexdoc/crafting_table.png'|hexdoc_texture }}"
            >
            
            <div class="crafting-table-grid">
              {% for cell_ingredients in recipe.ingredients %}
                {% if cell_ingredients is none %}
                  <div></div> {#- empty slot / air #}
                {% else %}
                  <div class="multi-textures cycle-textures">
                    {{ render_ingredients(cell_ingredients) }}
                  </div>
                {% endif %}
              {% endfor %}
            </div>

            <div class="crafting-table-result">
              {{ render_item(recipe.result.item, count=recipe.result.count) }}
            </div>
          </div>
        </div>
      {% endfor %}
    </div>
  </details>
{%- endmacro %}